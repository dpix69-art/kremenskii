{"file_contents":{"design_guidelines.md":{"content":"Looking at your uploaded specifications for the minimal editorial website for an artist, I'll provide comprehensive design guidelines that respect your detailed requirements.\n\n## Design Approach\n**Reference-Based Approach**: Drawing inspiration from high-end gallery and artist portfolio sites like those of contemporary art galleries and museum websites, emphasizing clean typography and sophisticated layout systems.\n\n## Core Design Elements\n\n### A. Color Palette\n**Light Mode:**\n- Primary: 20 8% 15% (charcoal black for text and headers)\n- Secondary: 0 0% 45% (medium gray for body text)\n- Background: 0 0% 98% (off-white)\n- Accent: 210 15% 85% (subtle blue-gray for links)\n\n**Dark Mode:**\n- Primary: 0 0% 95% (off-white for text)\n- Secondary: 0 0% 70% (light gray for body text)  \n- Background: 20 8% 8% (deep charcoal)\n- Accent: 210 20% 60% (muted blue for links)\n\n### B. Typography\n- **Primary**: Inter or similar modern sans-serif via Google Fonts\n- **Display**: Playfair Display for gallery titles and headers\n- **Body**: 16px base, 1.6 line height\n- **Headers**: Progressive scale (h1: 2.5rem, h2: 2rem, h3: 1.5rem)\n\n### C. Layout System\n**Tailwind Spacing Primitives**: Consistent use of 4, 8, 12, and 16 units\n- Micro spacing: p-4, m-4\n- Component spacing: p-8, gap-8\n- Section spacing: py-12, my-16\n- Page margins: px-4 (mobile), px-8 (desktop)\n\n### D. Component Library\n**Navigation**: Minimal header with logo/name and hamburger menu, full-screen overlay menu\n**Gallery Grid**: Masonry-style layout with 2-3 columns, hover states with subtle opacity changes\n**Sound Projects**: Embedded audio players with custom styling, waveform visualizations\n**Typography Blocks**: Large quote sections, editorial-style paragraph layouts\n**Image Displays**: Full-bleed hero images, lightbox modals for gallery viewing\n**Forms**: Minimal contact forms with clean input styling\n\n### E. Visual Treatment\n**Minimal Aesthetic**: Abundant whitespace, clean lines, focus on content\n**Image Presentation**: High-contrast, full-quality display with subtle shadows\n**Interactive Elements**: Subtle hover states, smooth transitions (300ms)\n**Grid Systems**: Flexible CSS Grid layouts, responsive breakpoints\n\n## Images Section\n**Hero Image**: Large, full-viewport hero image on homepage showcasing primary artwork\n**Gallery Images**: High-resolution artwork images in various aspect ratios\n**Process Documentation**: Behind-the-scenes studio photography\n**Portrait**: Professional artist headshot for about section\n\n**Image Placement**:\n- Homepage: Single impactful hero image\n- Gallery pages: Grid-based artwork displays\n- About page: Artist portrait and studio images\n- Individual work pages: Multiple angles and detail shots\n\n**Technical Requirements**: \n- Variant=\"outline\" buttons on hero images with blurred backgrounds\n- No custom hover/active states for buttons (built-in states preferred)\n- Lazy loading for gallery images\n- Progressive image enhancement\n\n## Accessibility & Performance\n- Consistent dark mode across all components\n- High contrast ratios maintained\n- Semantic HTML structure\n- Optimized image delivery\n- Screen reader friendly navigation\n\nThis design system creates a sophisticated, gallery-quality presentation that honors the artistic content while maintaining excellent usability and modern web standards.","size_bytes":3324},"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \".5625rem\", /* 9px */\n        md: \".375rem\", /* 6px */\n        sm: \".1875rem\", /* 3px */\n      },\n      colors: {\n        // Flat / base colors (regular buttons)\n        background: \"hsl(var(--background) / <alpha-value>)\",\n        foreground: \"hsl(var(--foreground) / <alpha-value>)\",\n        border: \"hsl(var(--border) / <alpha-value>)\",\n        input: \"hsl(var(--input) / <alpha-value>)\",\n        card: {\n          DEFAULT: \"hsl(var(--card) / <alpha-value>)\",\n          foreground: \"hsl(var(--card-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--card-border) / <alpha-value>)\",\n        },\n        popover: {\n          DEFAULT: \"hsl(var(--popover) / <alpha-value>)\",\n          foreground: \"hsl(var(--popover-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--popover-border) / <alpha-value>)\",\n        },\n        primary: {\n          DEFAULT: \"hsl(var(--primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--primary-foreground) / <alpha-value>)\",\n          border: \"var(--primary-border)\",\n        },\n        secondary: {\n          DEFAULT: \"hsl(var(--secondary) / <alpha-value>)\",\n          foreground: \"hsl(var(--secondary-foreground) / <alpha-value>)\",\n          border: \"var(--secondary-border)\",\n        },\n        muted: {\n          DEFAULT: \"hsl(var(--muted) / <alpha-value>)\",\n          foreground: \"hsl(var(--muted-foreground) / <alpha-value>)\",\n          border: \"var(--muted-border)\",\n        },\n        accent: {\n          DEFAULT: \"hsl(var(--accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--accent-foreground) / <alpha-value>)\",\n          border: \"var(--accent-border)\",\n        },\n        destructive: {\n          DEFAULT: \"hsl(var(--destructive) / <alpha-value>)\",\n          foreground: \"hsl(var(--destructive-foreground) / <alpha-value>)\",\n          border: \"var(--destructive-border)\",\n        },\n        ring: \"hsl(var(--ring) / <alpha-value>)\",\n        chart: {\n          \"1\": \"hsl(var(--chart-1) / <alpha-value>)\",\n          \"2\": \"hsl(var(--chart-2) / <alpha-value>)\",\n          \"3\": \"hsl(var(--chart-3) / <alpha-value>)\",\n          \"4\": \"hsl(var(--chart-4) / <alpha-value>)\",\n          \"5\": \"hsl(var(--chart-5) / <alpha-value>)\",\n        },\n        sidebar: {\n          ring: \"hsl(var(--sidebar-ring) / <alpha-value>)\",\n          DEFAULT: \"hsl(var(--sidebar) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-foreground) / <alpha-value>)\",\n          border: \"hsl(var(--sidebar-border) / <alpha-value>)\",\n        },\n        \"sidebar-primary\": {\n          DEFAULT: \"hsl(var(--sidebar-primary) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-primary-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-primary-border)\",\n        },\n        \"sidebar-accent\": {\n          DEFAULT: \"hsl(var(--sidebar-accent) / <alpha-value>)\",\n          foreground: \"hsl(var(--sidebar-accent-foreground) / <alpha-value>)\",\n          border: \"var(--sidebar-accent-border)\"\n        },\n        status: {\n          online: \"rgb(34 197 94)\",\n          away: \"rgb(245 158 11)\",\n          busy: \"rgb(239 68 68)\",\n          offline: \"rgb(156 163 175)\",\n        },\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n      },\n      fontSize: {\n        'type-h1': ['var(--type-h1)', { lineHeight: '1.2', fontWeight: '600' }],\n        'type-h2': ['var(--type-h2)', { lineHeight: '1.25', fontWeight: '600' }], \n        'type-h3': ['var(--type-h3)', { lineHeight: '1.35', fontWeight: '600' }],\n        'type-body': ['var(--type-body)', { lineHeight: '1.65', fontWeight: '400' }],\n        'type-small': ['var(--type-small)', { lineHeight: '1.4', fontWeight: '400' }],\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":4496},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // put application routes here\n  // prefix all routes with /api\n\n  // use storage to perform CRUD operations on the storage interface\n  // e.g. storage.insertUser(user) or storage.getUserByUsername(username)\n\n  const httpServer = createServer(app);\n\n  return httpServer;\n}\n","size_bytes":473},"server/storage.ts":{"content":"import { type User, type InsertUser } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\n\n// modify the interface with any CRUD methods\n// you might need\n\nexport interface IStorage {\n  getUser(id: string): Promise<User | undefined>;\n  getUserByUsername(username: string): Promise<User | undefined>;\n  createUser(user: InsertUser): Promise<User>;\n}\n\nexport class MemStorage implements IStorage {\n  private users: Map<string, User>;\n\n  constructor() {\n    this.users = new Map();\n  }\n\n  async getUser(id: string): Promise<User | undefined> {\n    return this.users.get(id);\n  }\n\n  async getUserByUsername(username: string): Promise<User | undefined> {\n    return Array.from(this.users.values()).find(\n      (user) => user.username === username,\n    );\n  }\n\n  async createUser(insertUser: InsertUser): Promise<User> {\n    const id = randomUUID();\n    const user: User = { ...insertUser, id };\n    this.users.set(id, user);\n    return user;\n  }\n}\n\nexport const storage = new MemStorage();\n","size_bytes":993},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar } from \"drizzle-orm/pg-core\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: text(\"username\").notNull().unique(),\n  password: text(\"password\").notNull(),\n});\n\nexport const insertUserSchema = createInsertSchema(users).pick({\n  username: true,\n  password: true,\n});\n\nexport type InsertUser = z.infer<typeof insertUserSchema>;\nexport type User = typeof users.$inferSelect;\n","size_bytes":584},"client/src/App.tsx":{"content":"import { Switch, Route, useLocation } from \"wouter\";\nimport { useEffect } from \"react\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport CookiesBanner from \"@/components/CookiesBanner\";\nimport NotFound from \"@/pages/not-found\";\nimport Home from \"@/pages/Home\";\nimport Gallery from \"@/pages/Gallery\";\nimport SeriesPage from \"@/pages/SeriesPage\";\nimport Sounds from \"@/pages/Sounds\";\nimport Statement from \"@/pages/Statement\";\nimport Contacts from \"@/pages/Contacts\";\nimport Impressum from \"@/pages/Impressum\";\nimport ArtworkDetailPage from \"@/pages/ArtworkDetailPage\";\nimport SoundProjectDetailPage from \"@/pages/SoundProjectDetailPage\";\n\n// Content routes that need scroll-to-top and focus management\nconst CONTENT_ROUTES = [\n  /^\\/gallery(\\/[^\\/]+)?(\\/[^\\/]+)?$/, // /gallery, /gallery/:series, /gallery/:series/:slug\n  /^\\/sounds(\\/[^\\/]+)?$/, // /sounds, /sounds/:slug\n  /^\\/statement$/,\n  /^\\/contacts$/,\n  /^\\/impressum$/\n];\n\nfunction RouteManager() {\n  const [location] = useLocation();\n\n  useEffect(() => {\n    // Check if current route is a content route\n    const isContentRoute = CONTENT_ROUTES.some(pattern => pattern.test(location));\n    \n    if (isContentRoute) {\n      // Check if URL has a hash\n      const hasHash = window.location.hash.length > 0;\n      \n      if (!hasHash) {\n        // Immediately scroll to top\n        window.scrollTo(0, 0);\n        \n        // Focus main heading after a brief delay to ensure DOM is ready\n        setTimeout(() => {\n          // Try different heading IDs in order of priority\n          const headingSelectors = ['#page-title', '#series-title', '#artwork-title', '#project-title'];\n          \n          for (const selector of headingSelectors) {\n            const heading = document.querySelector(selector);\n            if (heading) {\n              (heading as HTMLElement).focus();\n              break;\n            }\n          }\n        }, 50);\n      }\n      // If has hash, let browser handle naturally\n    }\n  }, [location]);\n\n  return null;\n}\n\nfunction Router() {\n  return (\n    <>\n      <RouteManager />\n      <Switch>\n        <Route path=\"/\" component={Home} />\n        <Route path=\"/gallery\" component={Gallery} />\n        <Route path=\"/gallery/:series\" component={SeriesPage} />\n        <Route path=\"/gallery/:series/:slug\" component={ArtworkDetailPage} />\n        <Route path=\"/sounds\" component={Sounds} />\n        <Route path=\"/sounds/:slug\" component={SoundProjectDetailPage} />\n        <Route path=\"/statement\" component={Statement} />\n        <Route path=\"/contacts\" component={Contacts} />\n        <Route path=\"/impressum\" component={Impressum} />\n        {/* Fallback to 404 */}\n        <Route component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n        <CookiesBanner />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":3142},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* LIGHT MODE */\n:root {\n  --button-outline: rgba(0,0,0, .10);\n  --badge-outline: rgba(0,0,0, .05);\n\n  /* Automatic computation of border around primary / danger buttons */\n  --opaque-button-border-intensity: -8; /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(0,0,0, .03);\n  --elevate-2: rgba(0,0,0, .08);\n\n  --background: 0 0% 100%;\n\n  --foreground: 0 0% 4%;\n\n  --border: 0 0% 93%;\n\n  --card: 0 0% 100%;\n\n  --card-foreground: 0 0% 4%;\n\n  --card-border: 0 0% 93%;\n\n  --sidebar: 0 0% 94%;\n\n  --sidebar-foreground: 20 8% 15%;\n\n  --sidebar-border: 0 0% 86%;\n\n  --sidebar-primary: 20 8% 15%;\n\n  --sidebar-primary-foreground: 0 0% 98%;\n\n  --sidebar-accent: 210 15% 85%;\n\n  --sidebar-accent-foreground: 20 8% 15%;\n\n  --sidebar-ring: 210 15% 75%;\n\n  --popover: 0 0% 92%;\n\n  --popover-foreground: 20 8% 15%;\n\n  --popover-border: 0 0% 84%;\n\n  --primary: 20 8% 15%;\n\n  --primary-foreground: 0 0% 98%;\n\n  --secondary: 0 0% 88%;\n\n  --secondary-foreground: 20 8% 15%;\n\n  --muted: 210 5% 90%;\n\n  --muted-foreground: 0 0% 40%;\n\n  --accent: 210 15% 85%;\n\n  --accent-foreground: 20 8% 15%;\n\n  --destructive: 0 65% 45%;\n\n  --destructive-foreground: 0 0% 98%;\n\n  --input: 0 0% 80%;\n  --ring: 210 15% 75%;\n  --chart-1: 20 8% 25%;\n  --chart-2: 210 20% 35%;\n  --chart-3: 30 15% 30%;\n  --chart-4: 240 12% 40%;\n  --chart-5: 180 10% 35%;\n\n  --font-sans: \"Inter\", \"IBM Plex Sans\", system-ui, -apple-system, \"Segoe UI\", Roboto, Arial, \"Noto Sans\", \"Helvetica Neue\", sans-serif;\n  \n  /* Typography Scale - Exact pixel values as per spec */\n  --type-h1: 40px;         /* H1: 40px/1.2/600 */\n  --type-h2: 30px;         /* H2: 30px/1.25/600 */\n  --type-h3: 22px;         /* H3: 22px/1.35/600 */\n  --type-body: 17px;       /* Body: 17px/1.65/400 */\n  --type-small: 13px;      /* Small: 13px/1.4/400 */\n  --font-serif: Georgia, serif;\n  --font-mono: Menlo, monospace;\n  --radius: .5rem; /* 8px */\n  \n  /* VERTICAL RHYTHM TOKENS (multiples of 4px) */\n  --section-py-sm: 64px;      /* Section padding Y - small/medium */\n  --section-py-lg: 72px;      /* Section padding Y - large+ */\n  --block-gap-sm: 24px;       /* Block gap - small/medium */\n  --block-gap-lg: 32px;       /* Block gap - large+ */\n  --heading-gap-lg: 40px;     /* Header to grid spacing - large */\n  --heading-gap-md: 32px;     /* Header to grid spacing - medium */\n  --heading-gap-sm: 24px;     /* Header to grid spacing - small */\n  --h1-mb: 16px;              /* H1 margin bottom */\n  --h2-mt: 40px;              /* H2 margin top */\n  --h2-mb: 12px;              /* H2 margin bottom */\n  --h3-mt: 32px;              /* H3 margin top */\n  --h3-mb: 8px;               /* H3 margin bottom */\n  --paragraph-gap: 16px;      /* Between paragraphs */\n  --list-item-gap: 12px;      /* Between list items */\n  --list-block-gap: 16px;     /* Above/below list blocks */\n  --figure-gap: 24px;         /* Around figures/media */\n  --card-caption-p: 16px;     /* Card caption padding */\n  --card-caption-gap: 8px;    /* Card caption inner gap */\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.02);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.03);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.03), 0px 1px 2px -1px hsl(0 0% 0% / 0.04);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.03), 0px 1px 2px -1px hsl(0 0% 0% / 0.05);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.04), 0px 2px 4px -1px hsl(0 0% 0% / 0.06);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.05), 0px 4px 6px -1px hsl(0 0% 0% / 0.08);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.06), 0px 8px 10px -1px hsl(0 0% 0% / 0.10);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.08);\n  --tracking-normal: 0em;\n  --spacing: 0.25rem;\n\n  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */\n\n  /* Fallback for older browsers */\n  --sidebar-primary-border: hsl(var(--sidebar-primary));\n  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --sidebar-accent-border: hsl(var(--sidebar-accent));\n  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --primary-border: hsl(var(--primary));\n  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --secondary-border: hsl(var(--secondary));\n  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --muted-border: hsl(var(--muted));\n  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --accent-border: hsl(var(--accent));\n  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n\n  /* Fallback for older browsers */\n  --destructive-border: hsl(var(--destructive));\n  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);\n}\n\n.dark {\n  --button-outline: rgba(255,255,255, .10);\n  --badge-outline: rgba(255,255,255, .05);\n\n  --opaque-button-border-intensity: 9;  /* In terms of percentages */\n\n  /* Backgrounds applied on top of other backgrounds when hovered/active */\n  --elevate-1: rgba(255,255,255, .04);\n  --elevate-2: rgba(255,255,255, .09);\n\n  --background: 20 8% 8%;\n\n  --foreground: 0 0% 95%;\n\n  --border: 20 6% 18%;\n\n  --card: 20 6% 12%;\n\n  --card-foreground: 0 0% 95%;\n\n  --card-border: 20 6% 20%;\n\n  --sidebar: 20 6% 10%;\n\n  --sidebar-foreground: 0 0% 95%;\n\n  --sidebar-border: 20 6% 16%;\n\n  --sidebar-primary: 20 8% 15%;\n\n  --sidebar-primary-foreground: 0 0% 95%;\n\n  --sidebar-accent: 20 6% 18%;\n\n  --sidebar-accent-foreground: 0 0% 85%;\n\n  --sidebar-ring: 210 20% 60%;\n\n  --popover: 20 6% 14%;\n\n  --popover-foreground: 0 0% 95%;\n\n  --popover-border: 20 6% 22%;\n\n  --primary: 20 8% 15%;\n\n  --primary-foreground: 0 0% 95%;\n\n  --secondary: 20 6% 16%;\n\n  --secondary-foreground: 0 0% 85%;\n\n  --muted: 20 6% 12%;\n\n  --muted-foreground: 0 0% 70%;\n\n  --accent: 20 6% 14%;\n\n  --accent-foreground: 0 0% 85%;\n\n  --destructive: 0 65% 45%;\n\n  --destructive-foreground: 0 0% 95%;\n\n  /* Used as the border around inputs. Dark mode: Should be a border that is light enough to have high contrast when rendered on a --card background. More contrast than standard --border */\n  --input: 20 6% 25%;\n  --ring: 210 20% 60%;\n  --chart-1: 0 0% 75%;\n  --chart-2: 210 20% 65%;\n  --chart-3: 30 15% 70%;\n  --chart-4: 240 12% 60%;\n  --chart-5: 180 10% 65%;\n\n  --shadow-2xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.15);\n  --shadow-xs: 0px 2px 0px 0px hsl(0 0% 0% / 0.20);\n  --shadow-sm: 0px 2px 0px 0px hsl(0 0% 0% / 0.20), 0px 1px 2px -1px hsl(0 0% 0% / 0.25);\n  --shadow: 0px 2px 0px 0px hsl(0 0% 0% / 0.20), 0px 1px 2px -1px hsl(0 0% 0% / 0.30);\n  --shadow-md: 0px 2px 0px 0px hsl(0 0% 0% / 0.25), 0px 2px 4px -1px hsl(0 0% 0% / 0.35);\n  --shadow-lg: 0px 2px 0px 0px hsl(0 0% 0% / 0.30), 0px 4px 6px -1px hsl(0 0% 0% / 0.40);\n  --shadow-xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.35), 0px 8px 10px -1px hsl(0 0% 0% / 0.50);\n  --shadow-2xl: 0px 2px 0px 0px hsl(0 0% 0% / 0.40);\n\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  html {\n    overflow-y: scroll;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n/**\n * Using the elevate system.\n * Automatic contrast adjustment.\n *\n * <element className=\"hover-elevate\" />\n * <element className=\"active-elevate-2\" />\n *\n * // Using the tailwind utility when a data attribute is \"on\"\n * <element className=\"toggle-elevate data-[state=on]:toggle-elevated\" />\n * // Or manually controlling the toggle state\n * <element className=\"toggle-elevate toggle-elevated\" />\n *\n * Elevation systems have to handle many states.\n * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)\n * - toggled or not\n * - focused or not (this is not handled with these utilities)\n *\n * Even without handling focused or not, this is six possible combinations that\n * need to be distinguished from eachother visually.\n */\n@layer utilities {\n  /* VERTICAL RHYTHM UTILITIES */\n  .section-py { \n    padding-top: var(--section-py-sm); \n    padding-bottom: var(--section-py-sm); \n  }\n  .section-py-lg { \n    padding-top: var(--section-py-lg); \n    padding-bottom: var(--section-py-lg); \n  }\n  .block-gap { \n    gap: var(--block-gap-sm); \n    display: flex; \n    flex-direction: column; \n  }\n  .block-gap-lg { \n    gap: var(--block-gap-lg); \n    display: flex; \n    flex-direction: column; \n  }\n  .heading-gap { margin-bottom: var(--heading-gap-sm); }\n  .heading-gap-md { margin-bottom: var(--heading-gap-md); }\n  .heading-gap-lg { margin-bottom: var(--heading-gap-lg); }\n  \n  /* HEADING SPACING */\n  .h1-spacing { margin-top: 0; margin-bottom: var(--h1-mb); }\n  .h2-spacing { margin-top: var(--h2-mt); margin-bottom: var(--h2-mb); }\n  .h3-spacing { margin-top: var(--h3-mt); margin-bottom: var(--h3-mb); }\n  \n  /* PARAGRAPH AND LIST UTILITIES */\n  .paragraph-stack { \n    display: flex; \n    flex-direction: column; \n    gap: var(--paragraph-gap); \n  }\n  .list-stack { \n    display: flex; \n    flex-direction: column; \n    gap: var(--paragraph-gap); \n  }\n  \n  /* CARD UTILITIES */\n  .card-caption-p { \n    padding: 0.75rem; \n    display: flex; \n    flex-direction: column; \n  }\n  .card-caption-gap { gap: 0.5rem; }\n  \n  /* CARD VARIABLES */\n  :root {\n    --card-caption-gap: 0.5rem;\n  }\n  \n  /* RESPONSIVE SECTION PADDING */\n  @media (min-width: 1024px) {\n    .section-py { \n      padding-top: var(--section-py-lg); \n      padding-bottom: var(--section-py-lg); \n    }\n    .block-gap { gap: var(--block-gap-lg); }\n    .heading-gap { margin-bottom: var(--heading-gap-lg); }\n    .card-caption-p { padding: 1rem; }\n  }\n\n  /* Hide ugly search cancel button in Chrome until we can style it properly */\n  input[type=\"search\"]::-webkit-search-cancel-button {\n    @apply hidden;\n  }\n\n  /* Placeholder styling for contentEditable div */\n  [contenteditable][data-placeholder]:empty::before {\n    content: attr(data-placeholder);\n    color: hsl(var(--muted-foreground));\n    pointer-events: none;\n  }\n\n  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of\n   * buttons/badges can remove the automatic brightness adjustment on interactions\n   * and program their own. */\n  .no-default-hover-elevate {}\n\n  .no-default-active-elevate {}\n\n\n  /**\n   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.\n   * This way they can stack/compound. Both will overlap the parent's borders!\n   * So borders will be automatically adjusted both on toggle, and hover/active,\n   * and they will be compounded.\n   */\n  .toggle-elevate::before,\n  .toggle-elevate-2::before {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: -1;\n    /* sits behind content but above backdrop */\n  }\n\n  .toggle-elevate.toggle-elevated::before {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.toggle-elevate::before {\n    inset: -1px;\n  }\n\n  /* Does not work on elements with overflow:hidden! */\n  .hover-elevate:not(.no-default-hover-elevate),\n  .active-elevate:not(.no-default-active-elevate),\n  .hover-elevate-2:not(.no-default-hover-elevate),\n  .active-elevate-2:not(.no-default-active-elevate) {\n    position: relative;\n    z-index: 0;\n  }\n\n  .hover-elevate:not(.no-default-hover-elevate)::after,\n  .active-elevate:not(.no-default-active-elevate)::after,\n  .hover-elevate-2:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:not(.no-default-active-elevate)::after {\n    content: \"\";\n    pointer-events: none;\n    position: absolute;\n    inset: 0px;\n    /*border-radius: inherit;   match rounded corners */\n    border-radius: inherit;\n    z-index: 999;\n    /* sits in front of content */\n  }\n\n  .hover-elevate:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-1);\n  }\n\n  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,\n  .active-elevate-2:active:not(.no-default-active-elevate)::after {\n    background-color: var(--elevate-2);\n  }\n\n  /* If there's a 1px border, adjust the inset so that it covers that parent's border */\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,\n  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,\n  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {\n    inset: -1px;\n  }\n}\n\n/* UNIFIED CONTAINER SYSTEM */\n.site-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding-left: 24px;\n  padding-right: 24px;\n}\n\n@media (min-width: 1024px) {\n  .site-container {\n    padding-left: 32px;\n    padding-right: 32px;\n  }\n}\n\n/* 12-COLUMN GRID SYSTEM */\n.grid-12 {\n  display: grid;\n  grid-template-columns: repeat(12, 1fr);\n  gap: 24px;\n}\n\n@media (min-width: 1024px) {\n  .grid-12 {\n    gap: 32px;\n  }\n}\n\n/* GRID COLUMN SPANS */\n.col-span-1 { grid-column: span 1; }\n.col-span-2 { grid-column: span 2; }\n.col-span-3 { grid-column: span 3; }\n.col-span-4 { grid-column: span 4; }\n.col-span-5 { grid-column: span 5; }\n.col-span-6 { grid-column: span 6; }\n.col-span-7 { grid-column: span 7; }\n.col-span-8 { grid-column: span 8; }\n.col-span-9 { grid-column: span 9; }\n.col-span-10 { grid-column: span 10; }\n.col-span-11 { grid-column: span 11; }\n.col-span-12 { grid-column: span 12; }\n\n/* RESPONSIVE COLUMN SPANS */\n@media (min-width: 768px) {\n  .md\\:col-span-1 { grid-column: span 1; }\n  .md\\:col-span-2 { grid-column: span 2; }\n  .md\\:col-span-3 { grid-column: span 3; }\n  .md\\:col-span-4 { grid-column: span 4; }\n  .md\\:col-span-5 { grid-column: span 5; }\n  .md\\:col-span-6 { grid-column: span 6; }\n  .md\\:col-span-7 { grid-column: span 7; }\n  .md\\:col-span-8 { grid-column: span 8; }\n  .md\\:col-span-9 { grid-column: span 9; }\n  .md\\:col-span-10 { grid-column: span 10; }\n  .md\\:col-span-11 { grid-column: span 11; }\n  .md\\:col-span-12 { grid-column: span 12; }\n}\n\n@media (min-width: 1024px) {\n  .lg\\:col-span-1 { grid-column: span 1; }\n  .lg\\:col-span-2 { grid-column: span 2; }\n  .lg\\:col-span-3 { grid-column: span 3; }\n  .lg\\:col-span-4 { grid-column: span 4; }\n  .lg\\:col-span-5 { grid-column: span 5; }\n  .lg\\:col-span-6 { grid-column: span 6; }\n  .lg\\:col-span-7 { grid-column: span 7; }\n  .lg\\:col-span-8 { grid-column: span 8; }\n  .lg\\:col-span-9 { grid-column: span 9; }\n  .lg\\:col-span-10 { grid-column: span 10; }\n  .lg\\:col-span-11 { grid-column: span 11; }\n  .lg\\:col-span-12 { grid-column: span 12; }\n}","size_bytes":15092},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/ArtworkDetail.tsx":{"content":"import { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\nimport { useLocation, useParams } from \"wouter\";\n\ninterface ArtworkImage {\n  url: string;\n  role: 'main' | 'angle' | 'detail';\n  alt: string;\n}\n\ninterface ArtworkDetailProps {\n  title: string;\n  seriesTitle?: string;\n  year: string;\n  medium: string;\n  dimensions: string;\n  price?: string;\n  availability?: 'available' | 'sold';\n  description: string[];\n  images: ArtworkImage[];\n  prevWork?: { title: string; slug: string };\n  nextWork?: { title: string; slug: string };\n}\n\nexport default function ArtworkDetail({\n  title,\n  seriesTitle,\n  year,\n  medium,\n  dimensions,\n  price,\n  availability = 'available',\n  description,\n  images,\n  prevWork,\n  nextWork\n}: ArtworkDetailProps) {\n  const [, setLocation] = useLocation();\n  const { series } = useParams();\n  const mainImage = images.find(img => img.role === 'main') || images[0];\n  const extraImages = images.filter(img => img.role !== 'main');\n\n  const handlePrevClick = () => {\n    if (prevWork && series) {\n      setLocation(`/gallery/${series}/${prevWork.slug}`);\n    }\n  };\n\n  const handleNextClick = () => {\n    if (nextWork && series) {\n      setLocation(`/gallery/${series}/${nextWork.slug}`);\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      {/* First Screen: Image + Meta Panel */}\n      <div className=\"site-container section-py\">\n        <div className=\"grid-12\">\n          {/* Left Column: Main Image */}\n          <div className=\"col-span-12 lg:col-span-7\">\n            <div className=\"w-full h-[65vh] lg:h-[clamp(540px,88vh,1000px)] overflow-hidden\">\n              <img\n                src={mainImage.url}\n                alt={mainImage.alt}\n                className=\"w-full h-full object-cover object-center\"\n                style={{ cursor: 'default', pointerEvents: 'none' }}\n                data-testid=\"main-artwork-image\"\n              />\n            </div>\n          </div>\n\n          {/* Right Column: Meta Panel */}\n          <div className=\"col-span-12 lg:col-span-5\" style={{marginTop: 'var(--block-gap-sm)'}}>\n            <div className=\"block-gap\">\n              {/* Title */}\n              <h1 \n                id=\"artwork-title\" \n                tabIndex={-1}\n                className=\"text-type-h1 font-semibold text-foreground leading-tight\"\n              >\n                {title}\n              </h1>\n\n              {/* Metadata as labeled rows */}\n              <dl className=\"space-y-4\">\n                {/* Series */}\n                {seriesTitle && (\n                  <div>\n                    <dt className=\"text-type-small font-semibold text-foreground leading-snug\">Series:</dt>\n                    <dd className=\"text-type-body text-foreground leading-relaxed\">{seriesTitle}</dd>\n                  </div>\n                )}\n\n                {/* Year */}\n                <div>\n                  <dt className=\"text-type-small font-semibold text-foreground leading-snug\">Year:</dt>\n                  <dd className=\"text-type-body text-foreground leading-relaxed\">{year}</dd>\n                </div>\n\n                {/* Availability */}\n                <div>\n                  <dt className=\"text-type-small font-semibold text-foreground leading-snug\">Availability:</dt>\n                  <dd className=\"text-type-body text-foreground leading-relaxed\">\n                    {availability === 'sold' ? 'Sold' : 'Available'}\n                  </dd>\n                </div>\n\n                {/* Price */}\n                <div>\n                  <dt className=\"text-type-small font-semibold text-foreground leading-snug\">Price:</dt>\n                  <dd className=\"text-type-body text-foreground leading-relaxed\">\n                    {price || 'On request'}\n                  </dd>\n                </div>\n\n                {/* Technique */}\n                <div>\n                  <dt className=\"text-type-small font-semibold text-foreground leading-snug\">Technique:</dt>\n                  <dd className=\"text-type-body text-foreground leading-relaxed\">{medium}</dd>\n                </div>\n\n                {/* Dimensions */}\n                <div>\n                  <dt className=\"text-type-small font-semibold text-foreground leading-snug\">Dimensions:</dt>\n                  <dd className=\"text-type-body text-foreground leading-relaxed\">{dimensions}</dd>\n                </div>\n              </dl>\n\n              {/* About This Work */}\n              <div className=\"block-gap\" style={{paddingTop: 'var(--h3-mt)'}}>\n                <h3 className=\"text-type-h3 font-medium text-foreground h3-spacing\">About This Work</h3>\n                <div className=\"space-y-4\">\n                  {description.map((paragraph, index) => (\n                    <p key={index} className=\"text-type-body text-foreground leading-relaxed\">\n                      {paragraph}\n                    </p>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Additional content below main content */}\n      <div className=\"site-container py-12\">\n\n        {/* Extra Images */}\n        {extraImages.length > 0 && (\n          <div className=\"space-y-6 mb-12\">\n            <h3 className=\"text-xl font-medium text-foreground\">Additional Views</h3>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              {extraImages.map((image, index) => (\n                <div \n                  key={index}\n                  className=\"aspect-square overflow-hidden rounded-md bg-muted\"\n                  data-testid={`extra-image-${index}`}\n                >\n                  <img\n                    src={image.url}\n                    alt={image.alt}\n                    className=\"w-full h-full object-cover\"\n                  />\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {/* Navigation */}\n        {(prevWork || nextWork) && (\n          <div className=\"flex justify-between items-center pt-8\">\n            {prevWork ? (\n              <Button \n                variant=\"ghost\" \n                className=\"flex items-center gap-2\" \n                data-testid=\"button-prev-work\"\n                onClick={handlePrevClick}\n              >\n                <ChevronLeft size={16} />\n                <span>Previous</span>\n              </Button>\n            ) : <div />}\n            \n            {nextWork ? (\n              <Button \n                variant=\"ghost\" \n                className=\"flex items-center gap-2\" \n                data-testid=\"button-next-work\"\n                onClick={handleNextClick}\n              >\n                <span>Next</span>\n                <ChevronRight size={16} />\n              </Button>\n            ) : <div />}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":6834},"client/src/components/ContactsPage.tsx":{"content":"import { useState } from \"react\";\nimport { Copy, Check } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ContactsPageProps {\n  email: string;\n  city: string;\n  country: string;\n  introText?: string;\n  openToText?: string;\n}\n\nexport default function ContactsPage({\n  email,\n  city,\n  country,\n  introText = \"If you have an idea or proposal, please write an email.\",\n  openToText = \"Open for exhibitions, collaborations and commissions. Please email.\"\n}: ContactsPageProps) {\n  const [emailCopied, setEmailCopied] = useState(false);\n\n  const copyEmail = async () => {\n    try {\n      await navigator.clipboard.writeText(email);\n      setEmailCopied(true);\n      // Analytics event\n      if (typeof window !== 'undefined' && (window as any).gtag) {\n        (window as any).gtag('event', 'copy_email', {\n          method: 'contact_page'\n        });\n      }\n      setTimeout(() => setEmailCopied(false), 2000);\n    } catch (err) {\n      console.error('Failed to copy email:', err);\n    }\n  };\n\n  const downloadPortfolio = () => {\n    // Analytics event\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'download_portfolio', {\n        bytes: 2400000, // 2.4 MB\n        version: 'v2025.1'\n      });\n    }\n    // Trigger download\n    const link = document.createElement('a');\n    link.href = '/files/portfolio.pdf';\n    link.download = 'artist-portfolio.pdf';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"site-container\">\n        <div className=\"space-y-12\">\n          {/* First Row: Intro and Email */}\n          <div className=\"grid-12\">\n            {/* Intro */}\n            <div className=\"col-span-12 lg:col-span-6 space-y-6\">\n              <p className=\"text-lg text-foreground leading-relaxed\">\n                {introText}\n              </p>\n            </div>\n\n            {/* Email & Portfolio */}\n            <div className=\"col-span-12 lg:col-span-6 space-y-4\">\n              <h2 className=\"text-xl font-medium text-foreground\">Email</h2>\n              <div className=\"space-y-3\">\n                <div className=\"flex items-center gap-3\">\n                  <Button\n                    variant=\"outline\"\n                    onClick={copyEmail}\n                    className=\"flex items-center gap-2 text-base\"\n                    data-testid=\"button-copy-email\"\n                  >\n                    <span>{email}</span>\n                    {emailCopied ? (\n                      <Check size={16} className=\"text-green-600\" />\n                    ) : (\n                      <Copy size={16} />\n                    )}\n                  </Button>\n                  {emailCopied && (\n                    <span className=\"text-sm text-muted-foreground\">Email copied!</span>\n                  )}\n                </div>\n                <div>\n                  <Button\n                    variant=\"default\"\n                    onClick={downloadPortfolio}\n                    className=\"text-base\"\n                    data-testid=\"button-download-portfolio\"\n                  >\n                    Download portfolio (PDF, 2.4 MB)\n                  </Button>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Second Row: Location and Opportunities */}\n          <div className=\"grid-12\">\n            {/* Location */}\n            <div className=\"col-span-12 lg:col-span-6 space-y-4\">\n              <h2 className=\"text-xl font-medium text-foreground\">Location</h2>\n              <div className=\"text-base text-foreground\">\n                <p>{city}, {country}</p>\n              </div>\n            </div>\n\n            {/* Opportunities */}\n            <div className=\"col-span-12 lg:col-span-6 space-y-4\">\n              <h2 className=\"text-xl font-medium text-foreground\">Opportunities</h2>\n              <p className=\"text-base text-foreground leading-relaxed\">\n                {openToText}\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4130},"client/src/components/Footer.tsx":{"content":"import { Download, Instagram, Music2, Music } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface FooterProps {\n  artistName?: string;\n  year?: number;\n  portfolioPdfUrl?: string;\n  socialLinks?: {\n    instagram?: string;\n    soundcloud?: string;\n    bandcamp?: string;\n  };\n}\n\nexport default function Footer({\n  artistName = \"Artist Name\",\n  year = new Date().getFullYear(),\n  portfolioPdfUrl = \"/files/portfolio.pdf\",\n  socialLinks = {}\n}: FooterProps) {\n  return (\n    <footer className=\"w-full bg-background py-12\">\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8\">\n        <div className=\"flex flex-col items-center lg:flex-row lg:items-center lg:justify-between gap-6\">\n          {/* Copyright and Legal */}\n          <div className=\"flex flex-col items-center sm:flex-row sm:items-center gap-2 sm:gap-4 text-center sm:text-left\">\n            <a \n              href=\"/impressum\" \n              className=\"text-sm text-muted-foreground hover:text-foreground transition-colors\"\n              data-testid=\"link-impressum\"\n            >\n              Impressum\n            </a>\n            <div className=\"flex flex-col items-center sm:flex-row sm:items-center gap-1 sm:gap-2\">\n              <p className=\"text-sm text-muted-foreground\">\n                Stuttgart 2025 © Dmitrii Kremenskii\n              </p>\n              <p className=\"text-sm text-muted-foreground\">\n                All rights reserved.\n              </p>\n            </div>\n          </div>\n\n          {/* Actions */}\n          <div className=\"flex flex-col items-center sm:items-start sm:flex-row gap-4 lg:gap-6\">\n            {/* Portfolio Download */}\n            {portfolioPdfUrl && (\n              <Button\n                variant=\"outline\"\n                size=\"sm\"\n                className=\"flex items-center gap-2\"\n                onClick={() => window.open(portfolioPdfUrl, '_blank')}\n                data-testid=\"button-download-portfolio\"\n              >\n                <Download size={14} />\n                <span>Portfolio</span>\n              </Button>\n            )}\n\n            {/* Social Links */}\n            <div className=\"flex items-center justify-center sm:justify-start gap-2\">\n              {socialLinks.instagram && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"flex items-center gap-2\"\n                  onClick={() => window.open(socialLinks.instagram, '_blank')}\n                  data-testid=\"link-instagram\"\n                >\n                  <Instagram size={14} />\n                  <span className=\"hidden sm:inline\">Instagram</span>\n                </Button>\n              )}\n              \n              {socialLinks.soundcloud && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"flex items-center gap-2\"\n                  onClick={() => window.open(socialLinks.soundcloud, '_blank')}\n                  data-testid=\"link-soundcloud\"\n                >\n                  <Music2 size={14} />\n                  <span className=\"hidden sm:inline\">SoundCloud</span>\n                </Button>\n              )}\n              \n              {socialLinks.bandcamp && (\n                <Button\n                  variant=\"ghost\"\n                  size=\"sm\"\n                  className=\"flex items-center gap-2\"\n                  onClick={() => window.open(socialLinks.bandcamp, '_blank')}\n                  data-testid=\"link-bandcamp\"\n                >\n                  <Music size={14} />\n                  <span className=\"hidden sm:inline\">Bandcamp</span>\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </footer>\n  );\n}","size_bytes":3759},"client/src/components/GalleryGrid.tsx":{"content":"import { Link } from \"wouter\";\nimport MouseTooltip from \"./MouseTooltip\";\n\ninterface GalleryItem {\n  id: string;\n  title: string;\n  year: string;\n  medium: string;\n  imageUrl: string;\n  linkUrl: string;\n  type: 'artwork' | 'sound_project' | 'series';\n}\n\ninterface GalleryGridProps {\n  items: GalleryItem[];\n  heading?: string;\n  linkUrl?: string;\n  columns?: 2 | 3 | 4;\n  showArtworkBadge?: boolean;\n}\n\nexport default function GalleryGrid({ \n  items, \n  heading, \n  linkUrl, \n  columns = 3,\n  showArtworkBadge = false\n}: GalleryGridProps) {\n  const gridCols = {\n    2: \"grid-cols-1 md:grid-cols-2\",\n    3: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-3\", \n    4: \"grid-cols-1 md:grid-cols-2 lg:grid-cols-4\"\n  };\n\n  return (\n    <section className=\"w-full\">\n      <div className=\"site-container\">\n        {heading && (\n          <div className=\"flex items-end justify-between h2-spacing\">\n            <h2 className=\"text-type-h2 font-semibold text-foreground\">\n              {heading}\n            </h2>\n            {linkUrl && (\n              <Link href={linkUrl}>\n                <span className=\"text-type-small text-muted-foreground hover:text-foreground transition-colors\">\n                  View All\n                </span>\n              </Link>\n            )}\n          </div>\n        )}\n\n        <div className=\"grid-12 items-stretch\">\n          {items.map((item) => {\n            const getColSpan = () => {\n              switch (columns) {\n                case 2: return \"col-span-12 md:col-span-6\";\n                case 3: return \"col-span-12 md:col-span-6 lg:col-span-4\";\n                case 4: return \"col-span-12 md:col-span-6 lg:col-span-3\";\n                default: return \"col-span-12 md:col-span-6 lg:col-span-4\";\n              }\n            };\n            \n            const getBadgeText = () => {\n              switch (item.type) {\n                case 'artwork': return showArtworkBadge ? 'Artwork' : null;\n                case 'series': return 'Series';\n                case 'sound_project': return 'Sound';\n                default: return null;\n              }\n            };\n\n            const badgeText = getBadgeText();\n            const needsPlaceholder = item.type === 'artwork' && !showArtworkBadge;\n\n            return (\n              <div key={item.id} className={getColSpan()}>\n                <Link href={item.linkUrl}>\n                    <article \n                      className=\"group cursor-pointer flex flex-col h-full\"\n                      data-testid={`card-${item.type}-${item.id}`}\n                    >\n                      <div className=\"aspect-[4/5] overflow-hidden rounded-md bg-muted\">\n                        <img\n                          src={item.imageUrl}\n                          alt={item.title}\n                          className=\"w-full h-full object-cover\"\n                          data-testid={`img-${item.type}-${item.id}`}\n                        />\n                      </div>\n                      <div className=\"flex flex-col justify-end flex-1 card-caption-p card-caption-gap\">\n                        {/* Badge row - always present for alignment */}\n                        <div className=\"min-h-[1rem]\">\n                          {badgeText ? (\n                            <span className=\"text-type-small font-semibold text-foreground uppercase tracking-wider\">\n                              {badgeText}\n                            </span>\n                          ) : needsPlaceholder ? (\n                            <div className=\"h-[1rem]\" aria-hidden=\"true\" />\n                          ) : null}\n                        </div>\n                        \n                        {/* Title */}\n                        <h3 className=\"text-type-body font-semibold text-foreground line-clamp-2\">\n                          {item.title}\n                        </h3>\n                        \n                        {/* Meta */}\n                        <div className=\"space-y-1\">\n                          <p className=\"text-type-small text-muted-foreground\">{item.year}</p>\n                          <p className=\"text-type-small text-muted-foreground\">{item.medium}</p>\n                        </div>\n                      </div>\n                    </article>\n                  </Link>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":4357},"client/src/components/Header.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { useState } from \"react\";\nimport { Menu, X } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface HeaderProps {\n  artistName?: string;\n}\n\nexport default function Header({ artistName = \"Artist Name\" }: HeaderProps) {\n  const [location] = useLocation();\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n\n  const navItems = [\n    { title: \"Gallery\", path: \"/gallery\" },\n    { title: \"Sounds\", path: \"/sounds\" },\n    { title: \"Statement\", path: \"/statement\" },\n    { title: \"Contacts\", path: \"/contacts\" }\n  ];\n\n  const isActive = (path: string) => {\n    if (path === \"/\" && location === \"/\") return true;\n    if (path !== \"/\" && location.startsWith(path)) return true;\n    return false;\n  };\n\n  return (\n    <header className=\"w-full bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8\">\n        <div className=\"flex items-center justify-between h-16\">\n          {/* Logo/Artist Name */}\n          <Link href=\"/\" data-testid=\"link-home\" className=\"cursor-pointer\">\n            <div \n              className=\"text-type-h3 font-semibold text-foreground\"\n              data-testid=\"text-header-artist-name\"\n            >\n              {artistName}\n            </div>\n          </Link>\n\n          {/* Desktop Navigation */}\n          <nav className=\"hidden md:flex items-center space-x-8\">\n            {navItems.map((item) => (\n              <Link\n                key={item.path}\n                href={item.path}\n                data-testid={`link-${item.title.toLowerCase()}`}\n              >\n                <span\n                  className={`text-type-small transition-colors hover:text-foreground/80 ${\n                    isActive(item.path)\n                      ? \"text-foreground font-medium\"\n                      : \"text-muted-foreground\"\n                  }`}\n                >\n                  {item.title}\n                </span>\n              </Link>\n            ))}\n          </nav>\n\n          {/* Mobile Menu Button */}\n          <Button\n            variant=\"ghost\"\n            size=\"icon\"\n            className=\"md:hidden\"\n            onClick={() => setMobileMenuOpen(!mobileMenuOpen)}\n            data-testid=\"button-mobile-menu\"\n          >\n            {mobileMenuOpen ? <X size={20} /> : <Menu size={20} />}\n          </Button>\n        </div>\n\n        {/* Mobile Navigation */}\n        {mobileMenuOpen && (\n          <nav className=\"md:hidden py-4\">\n            <div className=\"flex flex-col space-y-3\">\n              {navItems.map((item) => (\n                <Link\n                  key={item.path}\n                  href={item.path}\n                  onClick={() => setMobileMenuOpen(false)}\n                  data-testid={`mobile-link-${item.title.toLowerCase()}`}\n                >\n                  <span\n                    className={`block py-2 text-type-small transition-colors hover:text-foreground/80 ${\n                      isActive(item.path)\n                        ? \"text-foreground font-medium\"\n                        : \"text-muted-foreground\"\n                    }`}\n                  >\n                    {item.title}\n                  </span>\n                </Link>\n              ))}\n            </div>\n          </nav>\n        )}\n      </div>\n    </header>\n  );\n}","size_bytes":3393},"client/src/components/HeroFeaturedWork.tsx":{"content":"import { Link } from \"wouter\";\n\ninterface HeroFeaturedWorkProps {\n  imageUrl: string;\n  title: string;\n  year: string;\n  medium: string;\n  series: string;\n  linkUrl: string;\n  statement: string;\n  artistName: string;\n  caption?: {\n    visible: boolean;\n    variant: 'overlay-card' | 'none';\n  };\n}\n\nexport default function HeroFeaturedWork({\n  imageUrl,\n  title,\n  year,\n  medium,\n  series,\n  linkUrl,\n  statement,\n  artistName,\n  caption = { visible: true, variant: 'overlay-card' }\n}: HeroFeaturedWorkProps) {\n  const showCaption = caption.visible && caption.variant === 'overlay-card';\n\n  return (\n    <section className=\"w-full h-screen flex flex-col lg:flex-row\">\n      {/* Statement Area - Left Side */}\n      <div className=\"w-full lg:w-1/2 flex items-start pt-32 lg:pt-40\">\n        <div className=\"site-container\">\n          <div className=\"max-w-[480px] space-y-6\">\n            <div className=\"space-y-2\">\n              <h1 className=\"text-4xl lg:text-5xl font-semibold text-foreground\" data-testid=\"text-artist-name\">\n                {artistName}\n              </h1>\n              <p className=\"text-base text-muted-foreground\" data-testid=\"text-artist-title\">\n                Artist\n              </p>\n            </div>\n            <p className=\"text-base lg:text-lg leading-relaxed text-foreground font-medium\">\n              {statement}\n            </p>\n          </div>\n        </div>\n      </div>\n      {/* Image Area - Right Side */}\n      <div className=\"w-full lg:w-1/2 relative h-64 lg:h-screen\">\n        <img\n          src={imageUrl}\n          alt={`${title} by Artist Name`}\n          className=\"absolute inset-0 w-full h-full object-cover pt-[0px] pb-[0px] mt-[550px] mb-[550px]\"\n          data-testid=\"img-hero-artwork\"\n        />\n        \n        {/* Overlay Caption Card */}\n        {showCaption && (\n          <div className=\"absolute bottom-4 right-4 lg:bottom-6 lg:right-6 max-w-[280px] bg-white/85 backdrop-blur-sm p-3 rounded-md shadow-sm\" data-testid=\"caption-overlay-card\">\n            <div className=\"space-y-1\">\n              <p className=\"text-xs text-muted-foreground uppercase tracking-wide\">{series}</p>\n              <h2 className=\"text-sm font-medium text-foreground leading-tight\">\n                {title}\n              </h2>\n              <div className=\"text-xs text-muted-foreground space-y-0.5\">\n                <p>{year}</p>\n                <p>{medium}</p>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n}","size_bytes":2506},"client/src/components/SeriesIndex.tsx":{"content":"import { Link } from \"wouter\";\n\ninterface Series {\n  title: string;\n  slug: string;\n  year: string;\n  intro: string;\n  artworkImages: string[];\n  workCount: number;\n}\n\ninterface SeriesIndexProps {\n  series: Series[];\n}\n\nexport default function SeriesIndex({ series }: SeriesIndexProps) {\n  return (\n    <section className=\"w-full\">\n      <div className=\"site-container\">\n        <div className=\"block-gap\">\n          {series.map((seriesItem) => (\n            <Link key={seriesItem.slug} href={`/gallery/${seriesItem.slug}`}>\n                <article \n                  className=\"group cursor-pointer\"\n                  data-testid={`series-${seriesItem.slug}`}\n                >\n                <div className=\"grid-12\">\n                  <div className=\"col-span-12 lg:col-span-6 block-gap\">\n                    <div>\n                      <span className=\"text-type-small text-muted-foreground uppercase tracking-wide\">\n                        Series\n                      </span>\n                      <h2 className=\"text-type-h2 font-semibold text-foreground h2-spacing\">\n                        {seriesItem.title}\n                      </h2>\n                      <p className=\"text-type-body text-muted-foreground\">{seriesItem.year}</p>\n                    </div>\n                    <p className=\"text-type-body text-foreground leading-relaxed w-1/2\">\n                      {seriesItem.intro}\n                    </p>\n                    <div>\n                      <p className=\"text-type-small text-muted-foreground\" style={{marginBottom: 'var(--paragraph-gap)'}}>\n                        {seriesItem.workCount} {seriesItem.workCount === 1 ? 'work' : 'works'}\n                      </p>\n                      {/* Additional small images */}\n                      {seriesItem.artworkImages && seriesItem.artworkImages.length > 1 && (\n                        <div className=\"flex gap-2\">\n                          {seriesItem.artworkImages.slice(1, 3).map((imageUrl, index) => (\n                            <div key={index} className=\"w-[100px] h-[100px] overflow-hidden rounded-md bg-muted flex-shrink-0\">\n                              <img\n                                src={imageUrl}\n                                alt={`${seriesItem.title} artwork ${index + 2}`}\n                                className=\"w-full h-full object-cover\"\n                                data-testid={`img-series-${seriesItem.slug}-${index + 1}`}\n                              />\n                            </div>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-span-12 lg:col-span-6\">\n                    {seriesItem.artworkImages && seriesItem.artworkImages.length > 0 ? (\n                      <div className=\"aspect-[4/5] overflow-hidden rounded-md bg-muted\">\n                        <img\n                          src={seriesItem.artworkImages[0]}\n                          alt={`${seriesItem.title} series preview`}\n                          className=\"w-full h-full object-cover\"\n                          data-testid={`img-series-${seriesItem.slug}-main`}\n                        />\n                      </div>\n                    ) : (\n                      <div className=\"aspect-[4/5] overflow-hidden rounded-md bg-muted\">\n                        <div className=\"w-full h-full bg-muted flex items-center justify-center text-muted-foreground\">\n                          No images available\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                </div>\n                </article>\n              </Link>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n}","size_bytes":3766},"client/src/components/SoundProjectDetail.tsx":{"content":"interface Track {\n  title: string;\n  duration: string;\n  externalLink?: string;\n}\n\ninterface SoundProjectDetailProps {\n  title: string;\n  year: string;\n  location: {\n    city: string;\n    country: string;\n    institution: string;\n  };\n  coverImageUrl: string;\n  bodyBlocks: Array<{\n    type: 'h2' | 'p';\n    text: string;\n  }>;\n  tracks: Track[];\n  meta?: {\n    label?: string;\n    platforms?: string[];\n  };\n  embeddedPlayerUrl?: string;\n}\n\nexport default function SoundProjectDetail({\n  title,\n  year,\n  location,\n  coverImageUrl,\n  bodyBlocks,\n  tracks,\n  meta,\n  embeddedPlayerUrl\n}: SoundProjectDetailProps) {\n  const handlePlaySound = (trackTitle: string) => {\n    // Analytics event\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'play_sound', {\n        project: title,\n        track: trackTitle\n      });\n    }\n  };\n  return (\n    <div className=\"w-full py-12\">\n      <div className=\"site-container\">\n        <div className=\"space-y-12\">\n          {/* Header */}\n          <div className=\"space-y-6\">\n            <h1 \n              id=\"project-title\"\n              tabIndex={-1}\n              className=\"text-type-h1 font-semibold text-foreground leading-tight\"\n            >\n              {title}\n            </h1>\n            <div className=\"space-y-2\">\n              <p className=\"text-type-body text-foreground\">{year}</p>\n              <p className=\"text-type-body text-muted-foreground\">\n                {location.institution}, {location.city}, {location.country}\n              </p>\n            </div>\n          </div>\n\n          {/* Embedded Player - First */}\n          {embeddedPlayerUrl && (\n            <div className=\"space-y-4\">\n              <h3 className=\"text-type-h3 font-medium text-foreground\">Listen</h3>\n              <div className=\"aspect-[16/9] overflow-hidden rounded-md bg-muted\">\n                <iframe\n                  src={embeddedPlayerUrl.replace('auto_play=true', 'auto_play=false')}\n                  width=\"100%\"\n                  height=\"100%\"\n                  frameBorder=\"0\"\n                  allow=\"fullscreen\"\n                  title={`${title} audio player`}\n                  data-testid=\"audio-player\"\n                  className=\"w-full h-full\"\n                />\n              </div>\n            </div>\n          )}\n\n          {/* Track List - Second */}\n          {tracks.length > 0 && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-type-h3 font-medium text-foreground\">Tracks</h3>\n              <div className=\"space-y-3\">\n                {tracks.map((track, index) => (\n                  <div \n                    key={index} \n                    className=\"flex items-center justify-between py-3\"\n                    data-testid={`track-${index}`}\n                  >\n                    <div className=\"flex-1\">\n                      {track.externalLink ? (\n                        <a\n                          href={track.externalLink}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          onClick={() => handlePlaySound(track.title)}\n                          className=\"text-type-body text-foreground hover:text-muted-foreground transition-colors\"\n                        >\n                          {track.title}\n                        </a>\n                      ) : (\n                        <span className=\"text-type-body text-foreground\">{track.title}</span>\n                      )}\n                    </div>\n                    <span className=\"text-type-small text-muted-foreground font-mono\">\n                      {track.duration}\n                    </span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Cover Image - Third */}\n          <div className=\"aspect-video overflow-hidden rounded-md bg-muted\">\n            <img\n              src={coverImageUrl}\n              alt={`${title} cover image`}\n              className=\"w-full h-full object-cover\"\n              data-testid=\"img-project-cover\"\n            />\n          </div>\n\n          {/* Content Blocks - Fourth */}\n          <div className=\"prose prose-lg max-w-none space-y-6\">\n            {bodyBlocks.map((block, index) => {\n              if (block.type === 'h2') {\n                return (\n                  <h2 key={index} className=\"text-type-h2 font-semibold text-foreground mt-8 mb-4\">\n                    {block.text}\n                  </h2>\n                );\n              }\n              return (\n                <p key={index} className=\"text-type-body text-foreground leading-relaxed\">\n                  {block.text}\n                </p>\n              );\n            })}\n          </div>\n\n          {/* Meta Information */}\n          {meta && (meta.label || meta.platforms) && (\n            <div className=\"space-y-4 pt-8\">\n              {meta.label && (\n                <div>\n                  <span className=\"text-type-small text-muted-foreground\">Label: </span>\n                  <span className=\"text-type-small text-foreground\">{meta.label}</span>\n                </div>\n              )}\n              {meta.platforms && meta.platforms.length > 0 && (\n                <div>\n                  <span className=\"text-type-small text-muted-foreground\">Available on: </span>\n                  {meta.platforms.map((platform, index) => {\n                    const platformUrls: Record<string, string> = {\n                      'Bandcamp': 'https://artist.bandcamp.com',\n                      'SoundCloud': 'https://soundcloud.com/artist'\n                    };\n                    \n                    return (\n                      <span key={platform}>\n                        {index > 0 && <span className=\"text-type-small text-muted-foreground\">, </span>}\n                        <a\n                          href={platformUrls[platform] || '#'}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className=\"text-type-small text-foreground underline hover:text-muted-foreground transition-colors\"\n                          data-testid={`link-platform-${platform.toLowerCase()}`}\n                        >\n                          {platform}\n                        </a>\n                      </span>\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":6498},"client/src/components/StatementPage.tsx":{"content":"interface Exhibition {\n  year: string;\n  event: string;\n}\n\ninterface StatementPageProps {\n  portraitImageUrl: string;\n  statement: string[];\n  exhibitions: Exhibition[];\n  portraitPosition?: 'left' | 'right';\n  email?: string;\n}\n\nexport default function StatementPage({\n  portraitImageUrl,\n  statement,\n  exhibitions,\n  portraitPosition = 'left',\n  email = 'hi@example.art'\n}: StatementPageProps) {\n  const downloadPressKit = () => {\n    // Analytics event\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'press_kit_open', {\n        method: 'statement_page'\n      });\n    }\n    // Trigger download or open press kit page\n    const link = document.createElement('a');\n    link.href = '/files/press-kit.pdf';\n    link.download = 'artist-press-kit.pdf';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const copyEmail = async () => {\n    try {\n      await navigator.clipboard.writeText(email);\n      // Analytics event\n      if (typeof window !== 'undefined' && (window as any).gtag) {\n        (window as any).gtag('event', 'copy_email', {\n          method: 'statement_page'\n        });\n      }\n      // Could add toast notification here\n    } catch (err) {\n      console.error('Failed to copy email:', err);\n    }\n  };\n  return (\n    <div className=\"w-full py-12 pt-[0px] pb-[0px]\">\n      <div className=\"site-container\">\n        {/* Portrait and Statement */}\n        <div className=\"grid-12 mb-16\">\n          {/* Portrait Image */}\n          <div className={`col-span-12 lg:col-span-5 space-y-4 ${portraitPosition === 'right' ? 'lg:order-2' : 'lg:order-1'}`}>\n            <div className=\"aspect-[4/5] overflow-hidden rounded-md bg-muted\">\n              <img\n                src={portraitImageUrl}\n                alt=\"Artist portrait\"\n                className=\"w-full h-full object-cover\"\n                data-testid=\"img-artist-portrait\"\n              />\n            </div>\n          </div>\n\n          {/* Statement Text */}\n          <div className={`col-span-12 lg:col-span-7 space-y-6 ${portraitPosition === 'right' ? 'lg:order-1' : 'lg:order-2'}`}>\n            <h1 \n              id=\"page-title\"\n              tabIndex={-1}\n              className=\"text-type-h1 font-semibold text-foreground\"\n            >\n              Statement\n            </h1>\n            <div className=\"prose prose-lg max-w-none\">\n              {statement.map((paragraph, index) => (\n                <p key={index} className=\"text-type-body text-foreground leading-relaxed mb-6\">\n                  {paragraph}\n                </p>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Selected Exhibitions */}\n        <div className=\"space-y-8\">\n          <h2 className=\"text-type-h2 font-semibold text-foreground\">\n            Selected Exhibitions & Performances\n          </h2>\n          <div className=\"space-y-4\">\n            {exhibitions.map((exhibition, index) => (\n              <div key={index} className=\"flex flex-col sm:flex-row sm:gap-8\" data-testid={`exhibition-${index}`}>\n                <div className=\"text-type-body text-muted-foreground font-medium min-w-[4rem]\">\n                  {exhibition.year}\n                </div>\n                <div className=\"text-type-body text-foreground\">\n                  {exhibition.event}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {/* Press & Contact */}\n        <div className=\"grid-12 pt-8 border-t border-border\">\n          <div className=\"col-span-12 lg:col-span-6 space-y-4\">\n            <h2 className=\"text-type-h2 font-semibold text-foreground\">Press</h2>\n            <p className=\"text-type-body text-muted-foreground\">\n              Statement PDF + high-resolution press images\n            </p>\n            <button\n              onClick={downloadPressKit}\n              className=\"text-type-body text-foreground underline hover:text-muted-foreground transition-colors\"\n              data-testid=\"button-press-kit\"\n            >\n              Download press kit\n            </button>\n          </div>\n          \n          <div className=\"col-span-12 lg:col-span-6 space-y-4\">\n            <h2 className=\"text-type-h2 font-semibold text-foreground\">Contact</h2>\n            <button\n              onClick={copyEmail}\n              className=\"text-type-body text-foreground underline hover:text-muted-foreground transition-colors\"\n              data-testid=\"button-copy-email-statement\"\n            >\n              {email}\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":4638},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/ArtworkDetailPage.tsx":{"content":"import { useParams } from \"wouter\";\nimport { useEffect } from \"react\";\nimport Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport ArtworkDetail from \"@/components/ArtworkDetail\";\nimport GalleryGrid from \"@/components/GalleryGrid\";\nimport Footer from \"@/components/Footer\";\nimport blueAbstractImage from '@assets/generated_images/Blue_abstract_color_field_53f088fd.png';\nimport industrialSculptureImage from '@assets/generated_images/Industrial_sculpture_assemblage_2b04ef29.png';\nimport gesturalPaintingImage from '@assets/generated_images/Gestural_earth_tone_painting_554103d6.png';\nimport minimalistInstallationImage from '@assets/generated_images/White_minimalist_installation_e967bdd0.png';\nimport digitalPrintImage from '@assets/generated_images/Digital_glitch_print_392d678b.png';\n\nexport default function ArtworkDetailPage() {\n  const { series, slug } = useParams();\n  \n  // Analytics event for artwork view\n  useEffect(() => {\n    if (series && slug && typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'view_artwork', {\n        series: series,\n        work: slug\n      });\n    }\n  }, [series, slug]);\n  \n  // Series slug to title mapping\n  const seriesMap: Record<string, string> = {\n    farbkoerper: \"Farbkoerper\",\n    pgsrd: \"Plywood-Gravel-Sand-Road-Dust (PGSRD)\",\n    singles: \"Singles\",\n    graphics: \"Graphics\"\n  };\n  \n  const seriesTitle = seriesMap[series as string] || series || \"Unknown Series\";\n  \n  const artworkImages = [\n    {\n      url: blueAbstractImage,\n      role: 'main' as const,\n      alt: 'Untitled Study #12 - main view'\n    },\n    {\n      url: gesturalPaintingImage,\n      role: 'angle' as const,\n      alt: 'Untitled Study #12 - side angle'\n    }\n  ];\n\n  const description = [\n    \"This work continues the exploration of color as material substance, investigating how pigment can occupy and define space beyond the traditional boundaries of painting.\",\n    \"The composition emerges from a process of layering and excavation, where each application of paint both conceals and reveals the surface beneath.\",\n    \"Part of the ongoing Farbkoerper series, this piece questions the relationship between color perception and physical presence.\"\n  ];\n\n  // Related works in the same series\n  const relatedInSeries = [\n    {\n      id: \"related-1\",\n      title: \"Study #11\",\n      year: \"2024\",\n      medium: \"Mixed media on canvas\",\n      imageUrl: minimalistInstallationImage,\n      linkUrl: \"/gallery/farbkoerper/study-11\",\n      type: \"artwork\" as const\n    },\n    {\n      id: \"related-2\",\n      title: \"Study #13\",\n      year: \"2024\",\n      medium: \"Mixed media on canvas\",\n      imageUrl: industrialSculptureImage,\n      linkUrl: \"/gallery/farbkoerper/study-13\",\n      type: \"artwork\" as const\n    }\n  ];\n\n  // Related works from other series\n  const relatedGlobal = [\n    {\n      id: \"global-1\",\n      title: \"Material Fragment\",\n      year: \"2023\", \n      medium: \"Plywood assemblage\",\n      imageUrl: industrialSculptureImage,\n      linkUrl: \"/gallery/pgsrd/material-fragment\",\n      type: \"artwork\" as const\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      \n      <main className=\"flex-1\">\n        <div className=\"site-container section-py\">\n          <Breadcrumbs\n            items={[\n              { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n              { label: \"Gallery\", href: \"/gallery\", testId: \"link-bc-gallery\" },\n              { label: seriesTitle, href: `/gallery/${series}`, testId: \"link-bc-series\" },\n              { label: \"Untitled Study #12\", testId: \"text-bc-current\" }\n            ]}\n          />\n        </div>\n        <ArtworkDetail\n          title=\"Untitled Study #12\"\n          seriesTitle={seriesTitle}\n          year=\"2024\"\n          medium=\"Mixed media on canvas\"\n          dimensions=\"120 × 90 cm\"\n          price=\"€3,200\"\n          availability=\"available\"\n          description={description}\n          images={artworkImages}\n          prevWork={{ title: \"Study #11\", slug: \"study-11\" }}\n          nextWork={{ title: \"Study #13\", slug: \"study-13\" }}\n        />\n\n        {/* Related Works in Series */}\n        <section>\n          <GalleryGrid\n            items={relatedInSeries}\n            heading=\"More from Farbkoerper\"\n            linkUrl=\"/gallery/farbkoerper\"\n            columns={4}\n          />\n        </section>\n\n        {/* Related Works from Other Series */}\n        <section style={{marginTop: 'var(--section-py-lg)'}}>\n          <GalleryGrid\n            items={relatedGlobal}\n            heading=\"From other series & projects\"\n            linkUrl=\"/gallery\"\n            columns={4}\n          />\n        </section>\n      </main>\n\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\",\n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":5122},"client/src/pages/Contacts.tsx":{"content":"import Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport ContactsPage from \"@/components/ContactsPage\";\nimport Footer from \"@/components/Footer\";\n\nexport default function Contacts() {\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      \n      <main className=\"section-py flex-1\">\n        <div className=\"site-container heading-gap-lg\">\n          <Breadcrumbs \n            items={[\n              { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n              { label: \"Contacts\", testId: \"text-bc-current\" }\n            ]} \n          />\n          <h1 className=\"text-type-h1 font-semibold text-foreground h1-spacing\">\n            Contacts\n          </h1>\n        </div>\n        \n        <ContactsPage\n          email=\"hi@example.art\"\n          city=\"Berlin\"\n          country=\"Germany\"\n          introText=\"If you have an idea or proposal, please write an email.\"\n          openToText=\"Open for exhibitions, collaborations and commissions. Please email.\"\n        />\n      </main>\n\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\",\n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":1431},"client/src/pages/Gallery.tsx":{"content":"import Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport SeriesIndex from \"@/components/SeriesIndex\";\nimport Footer from \"@/components/Footer\";\nimport blueAbstractImage from '@assets/generated_images/Blue_abstract_color_field_53f088fd.png';\nimport industrialSculptureImage from '@assets/generated_images/Industrial_sculpture_assemblage_2b04ef29.png';\nimport gesturalPaintingImage from '@assets/generated_images/Gestural_earth_tone_painting_554103d6.png';\nimport minimalistInstallationImage from '@assets/generated_images/White_minimalist_installation_e967bdd0.png';\nimport digitalPrintImage from '@assets/generated_images/Digital_glitch_print_392d678b.png';\n\nexport default function Gallery() {\n  const seriesData = [\n    {\n      title: \"Farbkoerper\",\n      slug: \"farbkoerper\",\n      year: \"2022–\",\n      intro: \"An ongoing exploration of color as physical form, investigating the materiality of pigment and its relationship to space and light.\",\n      artworkImages: [blueAbstractImage, gesturalPaintingImage, minimalistInstallationImage],\n      workCount: 15\n    },\n    {\n      title: \"Plywood-Gravel-Sand-Road-Dust (PGSRD)\",\n      slug: \"pgsrd\", \n      year: \"2021–\",\n      intro: \"A series examining industrial and organic materials, their intersection in urban environments, and the traces they leave behind.\",\n      artworkImages: [industrialSculptureImage, digitalPrintImage, blueAbstractImage],\n      workCount: 8\n    },\n    {\n      title: \"Singles\",\n      slug: \"singles\",\n      year: \"2020–\",\n      intro: \"Individual works that explore various media and concepts outside of larger series, unified by an interest in material experimentation.\",\n      artworkImages: [gesturalPaintingImage, minimalistInstallationImage, digitalPrintImage],\n      workCount: 12\n    },\n    {\n      title: \"Graphics\",\n      slug: \"graphics\",\n      year: \"2019–\",\n      intro: \"Print-based works investigating digital and analog reproduction techniques, examining the transformation of images through various media.\",\n      artworkImages: [digitalPrintImage, industrialSculptureImage, blueAbstractImage],\n      workCount: 6\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      \n      <main className=\"section-py flex-1\">\n        <div className=\"site-container heading-gap-lg\">\n          <Breadcrumbs \n            items={[\n              { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n              { label: \"Gallery\", testId: \"text-bc-current\" }\n            ]} \n          />\n          <h1 \n            id=\"page-title\"\n            tabIndex={-1}\n            className=\"text-type-h1 font-semibold text-foreground h1-spacing\"\n          >\n            Gallery\n          </h1>\n        </div>\n        \n        <SeriesIndex series={seriesData} />\n      </main>\n\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\",\n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":3212},"client/src/pages/Home.tsx":{"content":"import { Link } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport GalleryGrid from \"@/components/GalleryGrid\";\nimport Footer from \"@/components/Footer\";\nimport blueAbstractImage from '@assets/generated_images/Blue_abstract_color_field_53f088fd.png';\nimport industrialSculptureImage from '@assets/generated_images/Industrial_sculpture_assemblage_2b04ef29.png';\nimport gesturalPaintingImage from '@assets/generated_images/Gestural_earth_tone_painting_554103d6.png';\nimport minimalistInstallationImage from '@assets/generated_images/White_minimalist_installation_e967bdd0.png';\nimport digitalPrintImage from '@assets/generated_images/Digital_glitch_print_392d678b.png';\nimport soundImage from '@assets/generated_images/Sound_art_installation_ace33df5.png';\n\nexport default function Home() {\n\n  const mixedGalleryItems = [\n    {\n      id: \"1\",\n      title: \"Color Study #1\",\n      year: \"2024\",\n      medium: \"Oil on canvas\",\n      imageUrl: blueAbstractImage,\n      linkUrl: \"/gallery/farbkoerper/color-study-1\",\n      type: \"artwork\" as const\n    },\n    {\n      id: \"2\",\n      title: \"Farbkoerper\",\n      year: \"2022–\",\n      medium: \"Ongoing series, 15 works\",\n      imageUrl: gesturalPaintingImage,\n      linkUrl: \"/gallery/farbkoerper\",\n      type: \"series\" as const\n    },\n    {\n      id: \"3\",\n      title: \"Sound Installation\",\n      year: \"2024\",\n      medium: \"Audio installation\", \n      imageUrl: soundImage,\n      linkUrl: \"/sounds/installation-project\",\n      type: \"sound_project\" as const\n    },\n    {\n      id: \"4\",\n      title: \"PGSRD\",\n      year: \"2021–\",\n      medium: \"Series, 8 works\",\n      imageUrl: industrialSculptureImage,\n      linkUrl: \"/gallery/pgsrd\",\n      type: \"series\" as const\n    },\n    {\n      id: \"5\",\n      title: \"Texture Analysis #3\",\n      year: \"2023\",\n      medium: \"Digital print\",\n      imageUrl: digitalPrintImage,\n      linkUrl: \"/gallery/graphics/texture-analysis-3\",\n      type: \"artwork\" as const\n    },\n    {\n      id: \"6\",\n      title: \"Resonance Project\",\n      year: \"2023\",\n      medium: \"Live performance recording\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/resonance-project\",\n      type: \"sound_project\" as const\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      <main className=\"flex-1\">\n        {/* Text Header */}\n        <section className=\"section-py\">\n          <div className=\"site-container\">\n            <div className=\"max-w-4xl\">\n              <h1 \n                id=\"page-title\"\n                tabIndex={-1}\n                className=\"text-type-h1 leading-tight font-semibold text-foreground h1-spacing\"\n                data-testid=\"text-artist-name\"\n              >\n                Artist Name\n              </h1>\n              <p className=\"text-type-small leading-snug font-semibold text-muted-foreground uppercase tracking-wide\" style={{marginBottom: 'var(--paragraph-gap)'}}>\n                Artist\n              </p>\n              <p className=\"text-type-body leading-relaxed text-foreground max-w-[48ch]\">\n                My practice investigates the intersection of material and meaning, exploring how physical substances carry cultural and emotional weight beyond their immediate visual properties. Through painting, sculpture, and sound, I examine the boundaries between the constructed and the found, seeking moments where these distinctions collapse or reveal their arbitrariness.\n              </p>\n            </div>\n          </div>\n        </section>\n        \n        {/* Two-column Grid */}\n        <div style={{marginTop: 'var(--heading-gap-lg)'}}>\n          <GalleryGrid\n            items={mixedGalleryItems}\n            columns={2}\n            showArtworkBadge={true}\n          />\n        </div>\n      </main>\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\", \n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":4146},"client/src/pages/SoundProjectDetailPage.tsx":{"content":"import { useParams } from \"wouter\";\nimport Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport SoundProjectDetail from \"@/components/SoundProjectDetail\";\nimport GalleryGrid from \"@/components/GalleryGrid\";\nimport Footer from \"@/components/Footer\";\nimport soundImage from '@assets/generated_images/Sound_art_installation_ace33df5.png';\n\nexport default function SoundProjectDetailPage() {\n  const { slug } = useParams();\n  \n  const projectTitle = \"Industrial Resonance\";\n  const bodyBlocks = [\n    {\n      type: 'h2' as const,\n      text: 'Concept'\n    },\n    {\n      type: 'p' as const,\n      text: 'This installation explores the acoustic properties of industrial spaces, using field recordings and live processing to create an immersive sound environment that responds to the physical architecture.'\n    },\n    {\n      type: 'p' as const,\n      text: 'The work was developed during a residency at the former factory space, incorporating both the building\\'s natural acoustics and its industrial heritage into the composition.'\n    },\n    {\n      type: 'h2' as const,\n      text: 'Process'\n    },\n    {\n      type: 'p' as const,\n      text: 'Over the course of three weeks, I recorded the ambient sounds of the space at different times of day, capturing both the building\\'s silence and the urban environment filtering through its walls.'\n    }\n  ];\n\n  const tracks = [\n    {\n      title: \"Factory Floor\",\n      duration: \"12:34\",\n      externalLink: \"https://soundcloud.com/artist/factory-floor\"\n    },\n    {\n      title: \"Resonance Study #1\",\n      duration: \"08:21\"\n    },\n    {\n      title: \"Ambient Reconstruction\",\n      duration: \"15:07\",\n      externalLink: \"https://soundcloud.com/artist/ambient-reconstruction\"\n    }\n  ];\n\n  // Related sound projects\n  const relatedSounds = [\n    {\n      id: \"sound-related-1\",\n      title: \"Spatial Frequencies\",\n      year: \"2022\",\n      medium: \"Vienna, Austria • Museum of Applied Arts\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/spatial-frequencies\",\n      type: \"sound_project\" as const\n    },\n    {\n      id: \"sound-related-2\",\n      title: \"Material Voices\", \n      year: \"2022\",\n      medium: \"Munich, Germany • Kunstverein München\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/material-voices\",\n      type: \"sound_project\" as const\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      \n      <main className=\"flex-1\">\n        <div className=\"site-container section-py\">\n          <Breadcrumbs\n            items={[\n              { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n              { label: \"Sounds\", href: \"/sounds\", testId: \"link-bc-sounds\" },\n              { label: projectTitle, testId: \"text-bc-current\" }\n            ]}\n          />\n        </div>\n        <SoundProjectDetail\n          title=\"Industrial Resonance\"\n          year=\"2023\"\n          location={{\n            city: \"Berlin\",\n            country: \"Germany\",\n            institution: \"Künstlerhaus Bethanien\"\n          }}\n          coverImageUrl={soundImage}\n          bodyBlocks={bodyBlocks}\n          tracks={tracks}\n          meta={{\n            label: \"Experimental Sounds\",\n            platforms: [\"Bandcamp\", \"SoundCloud\"]\n          }}\n          embeddedPlayerUrl=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/123456789&color=%23000000&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"\n        />\n\n        {/* Related Sound Projects */}\n        <section>\n          <GalleryGrid\n            items={relatedSounds}\n            heading=\"Related Sound Projects\"\n            linkUrl=\"/sounds\"\n            columns={2}\n          />\n        </section>\n      </main>\n\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\",\n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":4164},"client/src/pages/Sounds.tsx":{"content":"import Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport GalleryGrid from \"@/components/GalleryGrid\";\nimport Footer from \"@/components/Footer\";\nimport soundImage from '@assets/generated_images/Sound_art_installation_ace33df5.png';\n\nexport default function Sounds() {\n  const soundProjects = [\n    {\n      id: \"1\",\n      title: \"Industrial Resonance\",\n      year: \"2023\",\n      medium: \"Berlin, Germany • Künstlerhaus Bethanien\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/industrial-resonance\",\n      type: \"sound_project\" as const\n    },\n    {\n      id: \"2\", \n      title: \"Spatial Frequencies\",\n      year: \"2022\",\n      medium: \"Vienna, Austria • Museum of Applied Arts\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/spatial-frequencies\",\n      type: \"sound_project\" as const\n    },\n    {\n      id: \"3\",\n      title: \"Material Voices\",\n      year: \"2022\",\n      medium: \"Munich, Germany • Kunstverein München\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/material-voices\",\n      type: \"sound_project\" as const\n    },\n    {\n      id: \"4\",\n      title: \"Urban Field Studies\",\n      year: \"2021\",\n      medium: \"London, UK • ICA London\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/urban-field-studies\",\n      type: \"sound_project\" as const\n    }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      <main className=\"section-py flex-1\">\n        <div className=\"site-container heading-gap-lg\">\n          <Breadcrumbs \n            items={[\n              { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n              { label: \"Sounds\", testId: \"text-bc-current\" }\n            ]} \n          />\n          <h1 \n            id=\"page-title\"\n            tabIndex={-1}\n            className=\"text-type-h1 font-semibold text-foreground h1-spacing\"\n          >\n            Sounds\n          </h1>\n        </div>\n        \n        <GalleryGrid\n          items={soundProjects}\n          columns={2}\n        />\n      </main>\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\",\n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":2407},"client/src/pages/Statement.tsx":{"content":"import Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport StatementPage from \"@/components/StatementPage\";\nimport Footer from \"@/components/Footer\";\nimport portraitImage from '@assets/generated_images/Professional_artist_portrait_0c565b16.png';\n\nexport default function Statement() {\n  const statementText = [\n    \"My practice investigates the intersection of material and meaning, exploring how physical substances carry cultural and emotional weight beyond their immediate visual properties.\",\n    \"Through painting, sculpture, and sound, I examine the boundaries between the constructed and the found, the industrial and the organic, seeking moments where these distinctions collapse or reveal their arbitrariness.\",\n    \"Recent work has focused on the materiality of color itself—not as representation or symbol, but as physical substance that occupies space and time, accumulates history, and bears the traces of its own making.\"\n  ];\n\n  const exhibitions = [\n    { year: \"2024\", event: \"Material Traces, Contemporary Art Gallery, Berlin\" },\n    { year: \"2023\", event: \"Substance and Surface, Museum of Modern Art, Vienna\" },\n    { year: \"2023\", event: \"Sound and Space, Kunstverein München, Munich\" },\n    { year: \"2022\", event: \"Color Studies, Gallery XYZ, London\" },\n    { year: \"2021\", event: \"Industrial Fragments, Biennale of Contemporary Art, Venice\" },\n    { year: \"2021\", event: \"New Materialities, Tate Modern, London\" },\n    { year: \"2020\", event: \"Between Object and Sound, Berlinische Galerie, Berlin\" }\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      \n      <main className=\"flex-1\">\n        <div className=\"site-container section-py\">\n          <Breadcrumbs \n            items={[\n              { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n              { label: \"Statement\", testId: \"text-bc-current\" }\n            ]} \n          />\n        </div>\n        <StatementPage\n          portraitImageUrl={portraitImage}\n          statement={statementText}\n          exhibitions={exhibitions}\n          portraitPosition=\"left\"\n          email=\"hi@example.art\"\n        />\n      </main>\n\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\",\n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":2565},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/components/examples/ArtworkDetail.tsx":{"content":"import ArtworkDetail from '../ArtworkDetail';\nimport heroImage from '@assets/generated_images/Contemporary_abstract_hero_artwork_ba535c87.png';\nimport plywoodImage from '@assets/generated_images/Mixed_media_plywood_artwork_ff8bd8ac.png';\n\nexport default function ArtworkDetailExample() {\n  // TODO: remove mock functionality\n  const mockImages = [\n    {\n      url: heroImage,\n      role: 'main' as const,\n      alt: 'Untitled Study #12 - main view'\n    },\n    {\n      url: plywoodImage,\n      role: 'angle' as const,\n      alt: 'Untitled Study #12 - side angle'\n    }\n  ];\n\n  const mockDescription = [\n    \"This work continues the exploration of color as material substance, investigating how pigment can occupy and define space beyond the traditional boundaries of painting.\",\n    \"The composition emerges from a process of layering and excavation, where each application of paint both conceals and reveals the surface beneath.\",\n    \"Part of the ongoing Farbkoerper series, this piece questions the relationship between color perception and physical presence.\"\n  ];\n\n  return (\n    <ArtworkDetail\n      title=\"Untitled Study #12\"\n      year=\"2024\"\n      medium=\"Mixed media on canvas\"\n      dimensions=\"120 × 90 cm\"\n      description={mockDescription}\n      images={mockImages}\n      prevWork={{ title: \"Study #11\", slug: \"study-11\" }}\n      nextWork={{ title: \"Study #13\", slug: \"study-13\" }}\n    />\n  );\n}","size_bytes":1410},"client/src/components/examples/ContactsPage.tsx":{"content":"import ContactsPage from '../ContactsPage';\n\nexport default function ContactsPageExample() {\n  return (\n    <ContactsPage\n      email=\"hi@example.art\"\n      city=\"Berlin\"\n      country=\"Germany\"\n      introText=\"If you have an idea or proposal, please write an email.\"\n      openToText=\"Open for exhibitions, collaborations and commissions. Please email.\"\n    />\n  );\n}","size_bytes":369},"client/src/components/examples/Footer.tsx":{"content":"import Footer from '../Footer';\n\nexport default function FooterExample() {\n  return (\n    <Footer\n      artistName=\"Artist Name\"\n      year={2025}\n      portfolioPdfUrl=\"/files/portfolio.pdf\"\n      socialLinks={{\n        instagram: \"https://instagram.com/artist\",\n        soundcloud: \"https://soundcloud.com/artist\",\n        bandcamp: \"https://artist.bandcamp.com\"\n      }}\n    />\n  );\n}","size_bytes":387},"client/src/components/examples/GalleryGrid.tsx":{"content":"import GalleryGrid from '../GalleryGrid';\nimport heroImage from '@assets/generated_images/Contemporary_abstract_hero_artwork_ba535c87.png';\nimport plywoodImage from '@assets/generated_images/Mixed_media_plywood_artwork_ff8bd8ac.png';\nimport soundImage from '@assets/generated_images/Sound_art_installation_ace33df5.png';\n\nexport default function GalleryGridExample() {\n  // TODO: remove mock functionality\n  const mockItems = [\n    {\n      id: \"1\",\n      title: \"Color Study #1\",\n      year: \"2024\",\n      medium: \"Oil on canvas\",\n      imageUrl: heroImage,\n      linkUrl: \"/gallery/farbkoerper/color-study-1\",\n      type: \"artwork\" as const\n    },\n    {\n      id: \"2\", \n      title: \"Material Research\",\n      year: \"2023\",\n      medium: \"Plywood, gravel, sand\",\n      imageUrl: plywoodImage,\n      linkUrl: \"/gallery/pgsrd/material-research\",\n      type: \"artwork\" as const\n    },\n    {\n      id: \"3\",\n      title: \"Sound Installation\",\n      year: \"2024\",\n      medium: \"Audio installation\",\n      imageUrl: soundImage,\n      linkUrl: \"/sounds/installation-project\",\n      type: \"sound_project\" as const\n    }\n  ];\n\n  return (\n    <GalleryGrid \n      items={mockItems}\n      heading=\"Latest / Mixed\"\n      linkUrl=\"/gallery\"\n      columns={3}\n    />\n  );\n}","size_bytes":1259},"client/src/components/examples/Header.tsx":{"content":"import Header from '../Header';\n\nexport default function HeaderExample() {\n  return <Header artistName=\"Artist Name\" />;\n}","size_bytes":122},"client/src/components/examples/HeroFeaturedWork.tsx":{"content":"import HeroFeaturedWork from '../HeroFeaturedWork';\nimport heroImage from '@assets/generated_images/Contemporary_abstract_hero_artwork_ba535c87.png';\n\nexport default function HeroFeaturedWorkExample() {\n  return (\n    <HeroFeaturedWork\n      imageUrl={heroImage}\n      title=\"Untitled Study #12\"\n      year=\"2024\"\n      medium=\"Mixed media on canvas\"\n      series=\"Farbkoerper\"\n      linkUrl=\"/gallery/farbkoerper/untitled-study-12\"\n      statement=\"My practice investigates the intersection of material and meaning, exploring how physical substances carry cultural and emotional weight beyond their immediate visual properties. Through painting, sculpture, and sound, I examine the boundaries between the constructed and the found, seeking moments where these distinctions collapse or reveal their arbitrariness.\"\n      artistName=\"Artist Name\"\n      caption={{\n        visible: true,\n        variant: 'overlay-card'\n      }}\n    />\n  );\n}","size_bytes":940},"client/src/components/examples/SeriesIndex.tsx":{"content":"import SeriesIndex from '../SeriesIndex';\nimport heroImage from '@assets/generated_images/Contemporary_abstract_hero_artwork_ba535c87.png';\nimport plywoodImage from '@assets/generated_images/Mixed_media_plywood_artwork_ff8bd8ac.png';\n\nexport default function SeriesIndexExample() {\n  // TODO: remove mock functionality\n  const mockSeries = [\n    {\n      title: \"Farbkoerper\",\n      slug: \"farbkoerper\",\n      year: \"2022–\",\n      intro: \"An ongoing exploration of color as physical form, investigating the materiality of pigment and its relationship to space and light.\",\n      imageUrl: heroImage,\n      workCount: 15\n    },\n    {\n      title: \"Plywood-Gravel-Sand-Road-Dust (PGSRD)\",\n      slug: \"pgsrd\",\n      year: \"2021–\",\n      intro: \"A series examining industrial and organic materials, their intersection in urban environments, and the traces they leave behind.\",\n      imageUrl: plywoodImage,\n      workCount: 8\n    }\n  ];\n\n  return <SeriesIndex series={mockSeries} />;\n}","size_bytes":985},"client/src/components/examples/SoundProjectDetail.tsx":{"content":"import SoundProjectDetail from '../SoundProjectDetail';\nimport soundImage from '@assets/generated_images/Sound_art_installation_ace33df5.png';\n\nexport default function SoundProjectDetailExample() {\n  // TODO: remove mock functionality\n  const mockBodyBlocks = [\n    {\n      type: 'h2' as const,\n      text: 'Concept'\n    },\n    {\n      type: 'p' as const,\n      text: 'This installation explores the acoustic properties of industrial spaces, using field recordings and live processing to create an immersive sound environment that responds to the physical architecture.'\n    },\n    {\n      type: 'p' as const,\n      text: 'The work was developed during a residency at the former factory space, incorporating both the building\\'s natural acoustics and its industrial heritage into the composition.'\n    }\n  ];\n\n  const mockTracks = [\n    {\n      title: \"Factory Floor\",\n      duration: \"12:34\",\n      externalLink: \"https://soundcloud.com/artist/factory-floor\"\n    },\n    {\n      title: \"Resonance Study #1\",\n      duration: \"08:21\"\n    },\n    {\n      title: \"Ambient Reconstruction\", \n      duration: \"15:07\",\n      externalLink: \"https://soundcloud.com/artist/ambient-reconstruction\"\n    }\n  ];\n\n  return (\n    <SoundProjectDetail\n      title=\"Industrial Resonance\"\n      year=\"2023\"\n      location={{\n        city: \"Berlin\",\n        country: \"Germany\",\n        institution: \"Künstlerhaus Bethanien\"\n      }}\n      coverImageUrl={soundImage}\n      bodyBlocks={mockBodyBlocks}\n      tracks={mockTracks}\n      meta={{\n        label: \"Experimental Sounds\",\n        platforms: [\"Bandcamp\", \"SoundCloud\"]\n      }}\n      embeddedPlayerUrl=\"https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/playlists/123456789&color=%23ff5500&auto_play=false&hide_related=false&show_comments=true&show_user=true&show_reposts=false&show_teaser=true\"\n    />\n  );\n}","size_bytes":1857},"client/src/components/examples/StatementPage.tsx":{"content":"import StatementPage from '../StatementPage';\nimport portraitImage from '@assets/generated_images/Professional_artist_portrait_0c565b16.png';\n\nexport default function StatementPageExample() {\n  // TODO: remove mock functionality\n  const mockStatement = [\n    \"My practice investigates the intersection of material and meaning, exploring how physical substances carry cultural and emotional weight beyond their immediate visual properties.\",\n    \"Through painting, sculpture, and sound, I examine the boundaries between the constructed and the found, the industrial and the organic, seeking moments where these distinctions collapse or reveal their arbitrariness.\",\n    \"Recent work has focused on the materiality of color itself—not as representation or symbol, but as physical substance that occupies space and time, accumulates history, and bears the traces of its own making.\"\n  ];\n\n  const mockExhibitions = [\n    { year: \"2024\", event: \"Material Traces, Contemporary Art Gallery, Berlin\" },\n    { year: \"2023\", event: \"Substance and Surface, Museum of Modern Art, Vienna\" },\n    { year: \"2023\", event: \"Sound and Space, Kunstverein München, Munich\" },\n    { year: \"2022\", event: \"Color Studies, Gallery XYZ, London\" },\n    { year: \"2021\", event: \"Industrial Fragments, Biennale of Contemporary Art, Venice\" }\n  ];\n\n  return (\n    <StatementPage\n      portraitImageUrl={portraitImage}\n      statement={mockStatement}\n      exhibitions={mockExhibitions}\n      portraitPosition=\"left\"\n    />\n  );\n}","size_bytes":1503},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(`\n      after:content-[''] after:block after:absolute after:inset-0 after:rounded-full after:pointer-events-none after:border after:border-black/10 dark:after:border-white/10\n      relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full`,\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1592},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  // Whitespace-nowrap: Badges should never wrap.\n  \"whitespace-nowrap inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\" +\n  \" hover-elevate \" ,\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground shadow-xs\",\n        secondary: \"border-transparent bg-secondary text-secondary-foreground\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground shadow-xs\",\n\n        outline: \" border [border-color:var(--badge-outline)] shadow-xs\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1202},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\" +\n  \" hover-elevate active-elevate-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground border border-primary-border\",\n        destructive:\n          \"bg-destructive text-destructive-foreground border border-destructive-border\",\n        outline:\n          // Shows the background color of whatever card / sidebar / accent background it is inside of.\n          // Inherits the current text color.\n          \" border [border-color:var(--button-outline)]  shadow-xs active:shadow-none \",\n        secondary: \"border bg-secondary text-secondary-foreground border border-secondary-border \",\n        // Add a transparent border so that when someone toggles a border on later, it doesn't shift layout/size.\n        ghost: \"border border-transparent\",\n      },\n      // Heights are set as \"min\" heights, because sometimes Ai will place large amount of content\n      // inside buttons. With a min-height they will look appropriate with small amounts of content,\n      // but will expand to fit large amounts of content.\n      size: {\n        default: \"min-h-9 px-4 py-2\",\n        sm: \"min-h-8 rounded-md px-3 text-xs\",\n        lg: \"min-h-10 rounded-md px-8\",\n        icon: \"h-9 w-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":2359},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"shadcn-card rounded-xl border bg-card border-card-border text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n","size_bytes":1904},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    // h-9 to match icon buttons and default buttons.\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-9 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":844},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-9 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5741},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, VariantProps } from \"class-variance-authority\"\nimport { PanelLeftIcon } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nfunction SidebarProvider({\n  defaultOpen = true,\n  open: openProp,\n  onOpenChange: setOpenProp,\n  className,\n  style,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  defaultOpen?: boolean\n  open?: boolean\n  onOpenChange?: (open: boolean) => void\n}) {\n  const isMobile = useIsMobile()\n  const [openMobile, setOpenMobile] = React.useState(false)\n\n  // This is the internal state of the sidebar.\n  // We use openProp and setOpenProp for control from outside the component.\n  const [_open, _setOpen] = React.useState(defaultOpen)\n  const open = openProp ?? _open\n  const setOpen = React.useCallback(\n    (value: boolean | ((value: boolean) => boolean)) => {\n      const openState = typeof value === \"function\" ? value(open) : value\n      if (setOpenProp) {\n        setOpenProp(openState)\n      } else {\n        _setOpen(openState)\n      }\n\n      // This sets the cookie to keep the sidebar state.\n      document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n    },\n    [setOpenProp, open]\n  )\n\n  // Helper to toggle the sidebar.\n  const toggleSidebar = React.useCallback(() => {\n    return isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open)\n  }, [isMobile, setOpen, setOpenMobile])\n\n  // Adds a keyboard shortcut to toggle the sidebar.\n  React.useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (\n        event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n        (event.metaKey || event.ctrlKey)\n      ) {\n        event.preventDefault()\n        toggleSidebar()\n      }\n    }\n\n    window.addEventListener(\"keydown\", handleKeyDown)\n    return () => window.removeEventListener(\"keydown\", handleKeyDown)\n  }, [toggleSidebar])\n\n  // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n  // This makes it easier to style the sidebar with Tailwind classes.\n  const state = open ? \"expanded\" : \"collapsed\"\n\n  const contextValue = React.useMemo<SidebarContextProps>(\n    () => ({\n      state,\n      open,\n      setOpen,\n      isMobile,\n      openMobile,\n      setOpenMobile,\n      toggleSidebar,\n    }),\n    [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n  )\n\n  return (\n    <SidebarContext.Provider value={contextValue}>\n      <TooltipProvider delayDuration={0}>\n        <div\n          data-slot=\"sidebar-wrapper\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH,\n              \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n              ...style,\n            } as React.CSSProperties\n          }\n          className={cn(\n            \"group/sidebar-wrapper has-data-[variant=inset]:bg-sidebar flex min-h-svh w-full\",\n            className\n          )}\n          {...props}\n        >\n          {children}\n        </div>\n      </TooltipProvider>\n    </SidebarContext.Provider>\n  )\n}\n\nfunction Sidebar({\n  side = \"left\",\n  variant = \"sidebar\",\n  collapsible = \"offcanvas\",\n  className,\n  children,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  side?: \"left\" | \"right\"\n  variant?: \"sidebar\" | \"floating\" | \"inset\"\n  collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n}) {\n  const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n  if (collapsible === \"none\") {\n    return (\n      <div\n        data-slot=\"sidebar\"\n        className={cn(\n          \"bg-sidebar text-sidebar-foreground flex h-full w-[var(--sidebar-width)] flex-col\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n      </div>\n    )\n  }\n\n  if (isMobile) {\n    return (\n      <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n        <SheetContent\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar\"\n          data-mobile=\"true\"\n          className=\"bg-sidebar text-sidebar-foreground w-[var(--sidebar-width)] p-0 [&>button]:hidden\"\n          style={\n            {\n              \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n            } as React.CSSProperties\n          }\n          side={side}\n        >\n          <SheetHeader className=\"sr-only\">\n            <SheetTitle>Sidebar</SheetTitle>\n            <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n          </SheetHeader>\n          <div className=\"flex h-full w-full flex-col\">{children}</div>\n        </SheetContent>\n      </Sheet>\n    )\n  }\n\n  return (\n    <div\n      className=\"group peer text-sidebar-foreground hidden md:block\"\n      data-state={state}\n      data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n      data-variant={variant}\n      data-side={side}\n      data-slot=\"sidebar\"\n    >\n      {/* This is what handles the sidebar gap on desktop */}\n      <div\n        data-slot=\"sidebar-gap\"\n        className={cn(\n          \"relative w-[var(--sidebar-width)] bg-transparent transition-[width] duration-200 ease-linear\",\n          \"group-data-[collapsible=offcanvas]:w-0\",\n          \"group-data-[side=right]:rotate-180\",\n          variant === \"floating\" || variant === \"inset\"\n            ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4))]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)]\"\n        )}\n      />\n      <div\n        data-slot=\"sidebar-container\"\n        className={cn(\n          \"fixed inset-y-0 z-10 hidden h-svh w-[var(--sidebar-width)] transition-[left,right,width] duration-200 ease-linear md:flex\",\n          side === \"left\"\n            ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n            : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n          // Adjust the padding for floating and inset variants.\n          variant === \"floating\" || variant === \"inset\"\n            ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+var(--spacing-4)+2px)]\"\n            : \"group-data-[collapsible=icon]:w-[var(--sidebar-width-icon)] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n          className\n        )}\n        {...props}\n      >\n        <div\n          data-sidebar=\"sidebar\"\n          data-slot=\"sidebar-inner\"\n          className=\"bg-sidebar group-data-[variant=floating]:border-sidebar-border flex h-full w-full flex-col group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:shadow-sm\"\n        >\n          {children}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction SidebarTrigger({\n  className,\n  onClick,\n  ...props\n}: React.ComponentProps<typeof Button>) {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      data-sidebar=\"trigger\"\n      data-slot=\"sidebar-trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeftIcon />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n  const { toggleSidebar } = useSidebar()\n\n  // Note: Tailwind v3.4 doesn't support \"in-\" selectors. So the rail won't work perfectly.\n  return (\n    <button\n      data-sidebar=\"rail\"\n      data-slot=\"sidebar-rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"hover:after:bg-sidebar-border absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear group-data-[side=left]:-right-4 group-data-[side=right]:left-0 after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] sm:flex\",\n        \"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n  return (\n    <main\n      data-slot=\"sidebar-inset\"\n      className={cn(\n        \"bg-background relative flex w-full flex-1 flex-col\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarInput({\n  className,\n  ...props\n}: React.ComponentProps<typeof Input>) {\n  return (\n    <Input\n      data-slot=\"sidebar-input\"\n      data-sidebar=\"input\"\n      className={cn(\"bg-background h-8 w-full shadow-none\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-header\"\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-footer\"\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof Separator>) {\n  return (\n    <Separator\n      data-slot=\"sidebar-separator\"\n      data-sidebar=\"separator\"\n      className={cn(\"bg-sidebar-border mx-2 w-auto\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-content\"\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group\"\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupLabel({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-label\"\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"text-sidebar-foreground/70 ring-sidebar-ring flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium outline-hidden transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:h-4 [&>svg]:w-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupAction({\n  className,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-group-action\"\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarGroupContent({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-group-content\"\n      data-sidebar=\"group-content\"\n      className={cn(\"w-full text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu\"\n      data-sidebar=\"menu\"\n      className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-item\"\n      data-sidebar=\"menu-item\"\n      className={cn(\"group/menu-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:w-8! group-data-[collapsible=icon]:h-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction SidebarMenuButton({\n  asChild = false,\n  isActive = false,\n  variant = \"default\",\n  size = \"default\",\n  tooltip,\n  className,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  isActive?: boolean\n  tooltip?: string | React.ComponentProps<typeof TooltipContent>\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n  const Comp = asChild ? Slot : \"button\"\n  const { isMobile, state } = useSidebar()\n\n  const button = (\n    <Comp\n      data-slot=\"sidebar-menu-button\"\n      data-sidebar=\"menu-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n      {...props}\n    />\n  )\n\n  if (!tooltip) {\n    return button\n  }\n\n  if (typeof tooltip === \"string\") {\n    tooltip = {\n      children: tooltip,\n    }\n  }\n\n  return (\n    <Tooltip>\n      <TooltipTrigger asChild>{button}</TooltipTrigger>\n      <TooltipContent\n        side=\"right\"\n        align=\"center\"\n        hidden={state !== \"collapsed\" || isMobile}\n        {...tooltip}\n      />\n    </Tooltip>\n  )\n}\n\nfunction SidebarMenuAction({\n  className,\n  asChild = false,\n  showOnHover = false,\n  ...props\n}: React.ComponentProps<\"button\"> & {\n  asChild?: boolean\n  showOnHover?: boolean\n}) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-action\"\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground peer-hover/menu-button:text-sidebar-accent-foreground absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 outline-hidden transition-transform focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 md:after:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"peer-data-[active=true]/menu-button:text-sidebar-accent-foreground group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuBadge({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"sidebar-menu-badge\"\n      data-sidebar=\"menu-badge\"\n      className={cn(\n        \"text-sidebar-foreground pointer-events-none absolute right-1 flex h-5 min-w-5 items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums select-none\",\n        \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSkeleton({\n  className,\n  showIcon = false,\n  ...props\n}: React.ComponentProps<\"div\"> & {\n  showIcon?: boolean\n}) {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      data-slot=\"sidebar-menu-skeleton\"\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[var(--skeleton-width)] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n  return (\n    <ul\n      data-slot=\"sidebar-menu-sub\"\n      data-sidebar=\"menu-sub\"\n      className={cn(\n        \"border-sidebar-border mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l px-2.5 py-0.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubItem({\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) {\n  return (\n    <li\n      data-slot=\"sidebar-menu-sub-item\"\n      data-sidebar=\"menu-sub-item\"\n      className={cn(\"group/menu-sub-item relative\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SidebarMenuSubButton({\n  asChild = false,\n  size = \"md\",\n  isActive = false,\n  className,\n  ...props\n}: React.ComponentProps<\"a\"> & {\n  asChild?: boolean\n  size?: \"sm\" | \"md\"\n  isActive?: boolean\n}) {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      data-slot=\"sidebar-menu-sub-button\"\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"text-sidebar-foreground ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground [&>svg]:text-sidebar-accent-foreground flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 outline outline-2 outline-transparent outline-offset-2 focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":21846},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"replit.md":{"content":"# Artist Portfolio Website\n\n## Overview\n\nA minimal editorial website for a contemporary artist featuring artwork galleries, sound projects, and personal statements. Built with React, TypeScript, and Tailwind CSS, the site emphasizes clean typography, generous whitespace, and content-first design. The project implements a modern full-stack architecture with separate client and server components, designed to showcase visual and audio artworks in a sophisticated, gallery-like presentation.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript for type safety and modern component patterns\n- **Routing**: Wouter for lightweight client-side routing with pages for Home, Gallery, Sounds, Statement, and Contacts\n- **UI Framework**: Tailwind CSS with custom design system based on neutral colors and typography-focused layout\n- **Component Library**: Radix UI primitives for accessible, unstyled components with custom styling via shadcn/ui patterns\n- **State Management**: TanStack Query for server state management and data fetching\n- **Build Tool**: Vite for fast development and optimized production builds\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js server framework\n- **Language**: TypeScript with ES modules for consistent typing across client and server\n- **Database ORM**: Drizzle ORM configured for PostgreSQL with type-safe database operations\n- **Development Setup**: Hot module replacement with Vite integration for full-stack development\n\n### Design System\n- **Typography**: Inter and IBM Plex Sans font stack with defined type scales (H1: 40px, H2: 30px, H3: 22px, Body: 17px)\n- **Color Palette**: Monochrome approach with neutral colors (background: #FFFFFF, foreground: #0A0A0A, muted: #666666)\n- **Layout System**: CSS Grid with responsive breakpoints and consistent spacing using Tailwind's 4px base unit\n- **Component Patterns**: Reusable components for gallery grids, artwork details, sound projects, and navigation\n\n### Content Architecture\n- **Gallery Structure**: Hierarchical organization with series (Farbkoerper, PGSRD, Singles, Graphics) containing individual artworks\n- **Media Handling**: Support for high-resolution images (≥2000px), audio files, and embedded media players\n- **Navigation**: Structured routing with series pages, individual artwork pages, and sound project details\n- **Responsive Design**: Mobile-first approach with desktop enhancements for optimal viewing across devices\n\n## External Dependencies\n\n### Core Dependencies\n- **@tanstack/react-query**: Client-side data fetching and caching for API interactions\n- **wouter**: Lightweight routing library for single-page application navigation\n- **drizzle-orm**: Type-safe ORM for database operations with PostgreSQL support\n- **@neondatabase/serverless**: Serverless PostgreSQL database connection for cloud deployment\n\n### UI and Styling\n- **@radix-ui/***: Comprehensive set of accessible, unstyled UI primitives including dialogs, dropdowns, navigation menus\n- **tailwindcss**: Utility-first CSS framework for rapid UI development\n- **class-variance-authority**: Type-safe variant API for component styling\n- **clsx**: Utility for constructing className strings conditionally\n\n### Development Tools\n- **typescript**: Static type checking across the entire application\n- **vite**: Build tool with hot module replacement and optimized bundling\n- **esbuild**: Fast JavaScript bundler for production builds\n- **drizzle-kit**: Database migration and schema management tools\n\n### Form and Validation\n- **react-hook-form**: Performant form library with minimal re-renders\n- **@hookform/resolvers**: Validation resolvers for form integration\n- **zod**: TypeScript-first schema validation library\n- **drizzle-zod**: Integration between Drizzle ORM and Zod for database schema validation\n\n### Additional Features\n- **date-fns**: Modern JavaScript date utility library for timestamp handling\n- **cmdk**: Command palette component for enhanced navigation\n- **embla-carousel-react**: Touch-friendly carousel component for image galleries\n- **lucide-react**: Beautiful and consistent icon library for UI elements","size_bytes":4237},"client/src/pages/SeriesPage.tsx":{"content":"import { useParams } from \"wouter\";\nimport { useEffect } from \"react\";\nimport Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport GalleryGrid from \"@/components/GalleryGrid\";\nimport Footer from \"@/components/Footer\";\nimport blueAbstractImage from '@assets/generated_images/Blue_abstract_color_field_53f088fd.png';\nimport industrialSculptureImage from '@assets/generated_images/Industrial_sculpture_assemblage_2b04ef29.png';\nimport gesturalPaintingImage from '@assets/generated_images/Gestural_earth_tone_painting_554103d6.png';\nimport minimalistInstallationImage from '@assets/generated_images/White_minimalist_installation_e967bdd0.png';\nimport digitalPrintImage from '@assets/generated_images/Digital_glitch_print_392d678b.png';\n\ninterface SeriesWork {\n  id: string;\n  title: string;\n  year: string;\n  medium: string;\n  imageUrl: string;\n  linkUrl: string;\n  type: 'artwork';\n}\n\ninterface SeriesData {\n  title: string;\n  year: string;\n  intro: string;\n  works: SeriesWork[];\n}\n\nexport default function SeriesPage() {\n  const { series } = useParams();\n  \n  // Analytics event for series view\n  useEffect(() => {\n    if (series && typeof window !== 'undefined' && (window as any).gtag) {\n      (window as any).gtag('event', 'view_series', {\n        series: series\n      });\n    }\n  }, [series]);\n  \n  const seriesData: Record<string, SeriesData> = {\n    farbkoerper: {\n      title: \"Farbkoerper\",\n      year: \"2022–\",\n      intro: \"An ongoing exploration of color as physical form, investigating the materiality of pigment and its relationship to space and light.\",\n      works: [\n        {\n          id: \"1\",\n          title: \"Untitled Study #12\",\n          year: \"2024\",\n          medium: \"Mixed media on canvas\",\n          imageUrl: blueAbstractImage,\n          linkUrl: \"/gallery/farbkoerper/untitled-study-12\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"2\",\n          title: \"Color Study #1\",\n          year: \"2024\",\n          medium: \"Oil on canvas\",\n          imageUrl: gesturalPaintingImage,\n          linkUrl: \"/gallery/farbkoerper/color-study-1\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"3\",\n          title: \"Red Fragment\",\n          year: \"2023\",\n          medium: \"Acrylic on wood panel\",\n          imageUrl: minimalistInstallationImage,\n          linkUrl: \"/gallery/farbkoerper/red-fragment\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"4\",\n          title: \"Blue Composition\",\n          year: \"2023\",\n          medium: \"Mixed media\",\n          imageUrl: blueAbstractImage,\n          linkUrl: \"/gallery/farbkoerper/blue-composition\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"5\",\n          title: \"Color Field #7\",\n          year: \"2022\",\n          medium: \"Oil and pigment on canvas\",\n          imageUrl: blueAbstractImage,\n          linkUrl: \"/gallery/farbkoerper/color-field-7\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"6\",\n          title: \"Material Study\",\n          year: \"2022\",\n          medium: \"Mixed media on panel\",\n          imageUrl: blueAbstractImage,\n          linkUrl: \"/gallery/farbkoerper/material-study\",\n          type: \"artwork\" as const\n        }\n      ]\n    },\n    pgsrd: {\n      title: \"Plywood-Gravel-Sand-Road-Dust (PGSRD)\",\n      year: \"2021–\",\n      intro: \"A series examining industrial and organic materials, their intersection in urban environments, and the traces they leave behind.\",\n      works: [\n        {\n          id: \"1\",\n          title: \"Material Research\",\n          year: \"2023\",\n          medium: \"Plywood, gravel, sand\",\n          imageUrl: industrialSculptureImage,\n          linkUrl: \"/gallery/pgsrd/material-research\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"2\",\n          title: \"Urban Fragment #3\",\n          year: \"2023\",\n          medium: \"Road dust, mixed media\",\n          imageUrl: industrialSculptureImage,\n          linkUrl: \"/gallery/pgsrd/urban-fragment-3\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"3\",\n          title: \"Construction Study\",\n          year: \"2022\",\n          medium: \"Plywood, concrete\",\n          imageUrl: industrialSculptureImage,\n          linkUrl: \"/gallery/pgsrd/construction-study\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"4\",\n          title: \"Aggregate #12\",\n          year: \"2022\",\n          medium: \"Gravel, sand, resin\",\n          imageUrl: industrialSculptureImage,\n          linkUrl: \"/gallery/pgsrd/aggregate-12\",\n          type: \"artwork\" as const\n        }\n      ]\n    },\n    singles: {\n      title: \"Singles\",\n      year: \"2020–\",\n      intro: \"Individual works that explore various media and concepts outside of larger series, unified by an interest in material experimentation.\",\n      works: [\n        {\n          id: \"1\",\n          title: \"Fragment Study\",\n          year: \"2024\",\n          medium: \"Mixed media\",\n          imageUrl: digitalPrintImage,\n          linkUrl: \"/gallery/singles/fragment-study\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"2\",\n          title: \"Meditation #5\",\n          year: \"2023\",\n          medium: \"Oil on canvas\",\n          imageUrl: gesturalPaintingImage,\n          linkUrl: \"/gallery/singles/meditation-5\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"3\",\n          title: \"Untitled (Black)\",\n          year: \"2023\",\n          medium: \"Charcoal on paper\",\n          imageUrl: minimalistInstallationImage,\n          linkUrl: \"/gallery/singles/untitled-black\",\n          type: \"artwork\" as const\n        }\n      ]\n    },\n    graphics: {\n      title: \"Graphics\",\n      year: \"2019–\",\n      intro: \"Print-based works investigating digital and analog reproduction techniques, examining the transformation of images through various media.\",\n      works: [\n        {\n          id: \"1\",\n          title: \"Texture Analysis #3\",\n          year: \"2023\",\n          medium: \"Digital print\",\n          imageUrl: industrialSculptureImage,\n          linkUrl: \"/gallery/graphics/texture-analysis-3\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"2\",\n          title: \"Print Study #8\",\n          year: \"2022\",\n          medium: \"Screen print on paper\",\n          imageUrl: industrialSculptureImage,\n          linkUrl: \"/gallery/graphics/print-study-8\",\n          type: \"artwork\" as const\n        },\n        {\n          id: \"3\",\n          title: \"Digital Fragment\",\n          year: \"2021\",\n          medium: \"Inkjet print, mixed media\",\n          imageUrl: industrialSculptureImage,\n          linkUrl: \"/gallery/graphics/digital-fragment\",\n          type: \"artwork\" as const\n        }\n      ]\n    }\n  };\n\n  const currentSeries = seriesData[series as string];\n  \n  if (!currentSeries) {\n    return <div>Series not found</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      \n      <main className=\"flex-1\">\n        {/* Series Header */}\n        <section className=\"w-full section-py\">\n          <div className=\"site-container\">\n            <Breadcrumbs\n              items={[\n                { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n                { label: \"Gallery\", href: \"/gallery\", testId: \"link-bc-gallery\" },\n                { label: currentSeries.title, testId: \"text-bc-current\" }\n              ]}\n            />\n            <div className=\"block-gap\">\n              <div>\n                <span className=\"text-type-small text-muted-foreground uppercase tracking-wide\">\n                  Series\n                </span>\n                <h1 \n                  id=\"series-title\"\n                  tabIndex={-1}\n                  className=\"text-type-h1 font-semibold text-foreground h1-spacing\"\n                >\n                  {currentSeries.title}\n                </h1>\n                <p className=\"text-type-body text-muted-foreground\">{currentSeries.year}</p>\n              </div>\n              <div className=\"max-w-2xl\">\n                <p className=\"text-type-body text-foreground leading-relaxed\">\n                  {currentSeries.intro}\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        {/* Works Grid */}\n        <GalleryGrid\n          items={currentSeries.works}\n          columns={3}\n        />\n      </main>\n\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\", \n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":8807},"client/src/components/Breadcrumbs.tsx":{"content":"import { Link } from \"wouter\";\nimport { ChevronRight } from \"lucide-react\";\n\ninterface BreadcrumbItem {\n  label: string;\n  href?: string;\n  testId?: string;\n}\n\ninterface BreadcrumbsProps {\n  items: BreadcrumbItem[];\n}\n\nexport default function Breadcrumbs({ items }: BreadcrumbsProps) {\n  return (\n    <nav aria-label=\"Breadcrumb\" className=\"mt-6 mb-4 lg:mt-8\">\n      <ol className=\"flex items-center flex-wrap gap-1 text-sm text-muted-foreground pt-[0px] pb-[0px]\">\n        {items.map((item, index) => (\n          <li key={index} className=\"flex items-center\">\n            {index > 0 && (\n              <ChevronRight className=\"mx-2 h-3 w-3\" />\n            )}\n            {item.href ? (\n              <Link href={item.href}>\n                <span \n                  className=\"hover:text-foreground transition-colors cursor-pointer\"\n                  data-testid={item.testId || `link-bc-${item.label.toLowerCase().replace(/\\s+/g, '-')}`}\n                >\n                  {item.label}\n                </span>\n              </Link>\n            ) : (\n              <span \n                className=\"text-foreground\"\n                data-testid={item.testId || `text-bc-current`}\n              >\n                {item.label}\n              </span>\n            )}\n          </li>\n        ))}\n      </ol>\n    </nav>\n  );\n}","size_bytes":1319},"client/src/components/CookiesBanner.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { X } from \"lucide-react\";\n\nexport default function CookiesBanner() {\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    // Check if user has already accepted cookies\n    const cookiesAccepted = localStorage.getItem('cookies-accepted');\n    if (!cookiesAccepted) {\n      // Show banner after a brief delay for better UX\n      const timer = setTimeout(() => {\n        setIsVisible(true);\n      }, 1000);\n      return () => clearTimeout(timer);\n    }\n  }, []);\n\n  const acceptCookies = () => {\n    localStorage.setItem('cookies-accepted', 'true');\n    setIsVisible(false);\n  };\n\n  const rejectCookies = () => {\n    localStorage.setItem('cookies-accepted', 'false');\n    setIsVisible(false);\n  };\n\n  if (!isVisible) return null;\n\n  return (\n    <div className=\"fixed bottom-0 left-0 right-0 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/80 border-t border-border z-50\">\n      <div className=\"max-w-7xl mx-auto px-6 lg:px-8 py-4\">\n        <div className=\"flex flex-col sm:flex-row items-start sm:items-center justify-between gap-4\">\n          <div className=\"flex-1\">\n            <p className=\"text-sm text-foreground\">\n              This website uses essential cookies to ensure proper functionality. No tracking or marketing cookies are used.\n            </p>\n          </div>\n          \n          <div className=\"flex items-center gap-3\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={rejectCookies}\n              data-testid=\"button-reject-cookies\"\n            >\n              Reject\n            </Button>\n            <Button\n              variant=\"default\"\n              size=\"sm\"\n              onClick={acceptCookies}\n              data-testid=\"button-accept-cookies\"\n            >\n              Accept\n            </Button>\n            <Button\n              variant=\"ghost\"\n              size=\"icon\"\n              onClick={rejectCookies}\n              className=\"shrink-0\"\n              data-testid=\"button-close-cookies\"\n            >\n              <X size={16} />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","size_bytes":2258},"client/src/components/MouseTooltip.tsx":{"content":"import { useState, useCallback, ReactNode } from \"react\";\n\ninterface Position {\n  x: number;\n  y: number;\n}\n\ninterface MouseTooltipProps {\n  children: ReactNode;\n  className?: string;\n  phrases?: string[];\n  offset?: number;\n}\n\nconst DEFAULT_PHRASES = [\n  \"Explore\",\n  \"Discover\", \n  \"View\",\n  \"See\",\n  \"Look\",\n  \"Enter\",\n  \"Open\",\n  \"Visit\"\n];\n\nconst DEFAULT_OFFSET = 20;\n\nexport default function MouseTooltip({ \n  children, \n  className = \"\",\n  phrases = DEFAULT_PHRASES,\n  offset = DEFAULT_OFFSET\n}: MouseTooltipProps) {\n  const [isVisible, setIsVisible] = useState(false);\n  const [position, setPosition] = useState<Position>({ x: 0, y: 0 });\n  const [currentPhrase, setCurrentPhrase] = useState(phrases[0]);\n\n  const getRandomPhrase = useCallback(() => {\n    return phrases[Math.floor(Math.random() * phrases.length)];\n  }, [phrases]);\n\n  const calculatePosition = useCallback((clientX: number, clientY: number): Position => {\n    const x = clientX + offset;\n    const y = clientY + offset;\n    \n    // Basic boundary checking to prevent tooltip from going off screen\n    const maxX = window.innerWidth - 100; // Approximate tooltip width\n    const maxY = window.innerHeight - 30; // Approximate tooltip height\n    \n    return {\n      x: Math.min(x, maxX),\n      y: Math.min(y, maxY)\n    };\n  }, [offset]);\n\n  const handleMouseEnter = useCallback(() => {\n    setCurrentPhrase(getRandomPhrase());\n    setIsVisible(true);\n  }, [getRandomPhrase]);\n\n  const handleMouseLeave = useCallback(() => {\n    setIsVisible(false);\n  }, []);\n\n  const handleMouseMove = useCallback((e: React.MouseEvent) => {\n    setPosition(calculatePosition(e.clientX, e.clientY));\n  }, [calculatePosition]);\n\n  return (\n    <div \n      className={className}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onMouseMove={handleMouseMove}\n    >\n      {children}\n      \n      {isVisible && (\n        <div\n          className=\"fixed bg-black text-white px-1.5 py-0.5 text-xs pointer-events-none z-50 select-none\"\n          style={{\n            left: `${position.x}px`,\n            top: `${position.y}px`\n          }}\n          data-testid=\"mouse-tooltip\"\n          aria-hidden=\"true\"\n        >\n          {currentPhrase}\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":2266},"client/src/pages/Impressum.tsx":{"content":"import Header from \"@/components/Header\";\nimport Breadcrumbs from \"@/components/Breadcrumbs\";\nimport Footer from \"@/components/Footer\";\n\nexport default function Impressum() {\n  return (\n    <div className=\"min-h-screen bg-background flex flex-col\">\n      <Header artistName=\"Artist Name\" />\n      \n      <main className=\"section-py flex-1\">\n        <div className=\"site-container heading-gap-lg\">\n          <Breadcrumbs \n            items={[\n              { label: \"Home\", href: \"/\", testId: \"link-bc-home\" },\n              { label: \"Impressum\", testId: \"text-bc-current\" }\n            ]} \n          />\n          <h1 className=\"text-type-h1 font-semibold text-foreground h1-spacing\">\n            Impressum\n          </h1>\n        </div>\n        \n        <div className=\"w-full\">\n          <div className=\"site-container\">\n            <div className=\"block-gap-lg\">\n              {/* Information according to § 5 TMG */}\n              <div className=\"grid-12\">\n                <div className=\"col-span-12 lg:col-span-6 block-gap\">\n                  <div className=\"block-gap\">\n                    <h2 className=\"text-type-h3 font-medium text-foreground h3-spacing\">Information according to § 5 TMG</h2>\n                    <div className=\"text-type-body text-foreground paragraph-stack\">\n                      <p>Artist Name</p>\n                      <p>Street Address 123</p>\n                      <p>12345 Berlin</p>\n                      <p>Germany</p>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-span-12 lg:col-span-6 block-gap\">\n                  <h2 className=\"text-type-h3 font-medium text-foreground h3-spacing\">Contact</h2>\n                  <div className=\"text-type-body text-foreground paragraph-stack\">\n                    <p>Email: hi@example.art</p>\n                    <p>Phone: +49 (0) 123 456789</p>\n                  </div>\n                </div>\n              </div>\n\n              {/* Liability and Copyright */}\n              <div className=\"grid-12\">\n                <div className=\"col-span-12 lg:col-span-6 block-gap\">\n                  <h2 className=\"text-type-h3 font-medium text-foreground h3-spacing\">Liability for Contents</h2>\n                  <p className=\"text-type-body text-foreground leading-relaxed\">\n                    As service providers, we are liable for own contents of these websites according to Sec. 7, para.1 German Telemedia Act (TMG). However, according to Sec. 8 to 10 German Telemedia Act (TMG), service providers are not under obligation to monitor permanently the information, which they have transmitted or stored, nor to search for evidences of illegal activities.\n                  </p>\n                </div>\n\n                <div className=\"col-span-12 lg:col-span-6 block-gap\">\n                  <h2 className=\"text-type-h3 font-medium text-foreground h3-spacing\">Copyright</h2>\n                  <p className=\"text-type-body text-foreground leading-relaxed\">\n                    The contents and works created by the site operators on these pages are subject to German copyright law. Duplication, processing, distribution, and any form of commercialization of such material beyond the scope of the copyright law shall require the prior written consent of its respective author or creator.\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </main>\n\n      <Footer\n        artistName=\"Artist Name\"\n        year={2025}\n        portfolioPdfUrl=\"/files/portfolio.pdf\"\n        socialLinks={{\n          instagram: \"https://instagram.com/artist\",\n          soundcloud: \"https://soundcloud.com/artist\",\n          bandcamp: \"https://artist.bandcamp.com\"\n        }}\n      />\n    </div>\n  );\n}","size_bytes":3785},".eslintrc.js":{"content":"module.exports = {\n  parser: '@typescript-eslint/parser',\n  extends: [\n    'eslint:recommended',\n    '@typescript-eslint/recommended',\n    'plugin:react/recommended',\n    'plugin:react-hooks/recommended',\n    'plugin:jsx-a11y/recommended'\n  ],\n  plugins: ['@typescript-eslint', 'react', 'react-hooks', 'jsx-a11y'],\n  rules: {\n    'react/react-in-jsx-scope': 'off',\n    '@typescript-eslint/no-explicit-any': 'warn',\n    '@typescript-eslint/no-unused-vars': 'error',\n    'react/prop-types': 'off',\n    'jsx-a11y/no-multiple-h1': 'error',\n    'react/jsx-key': 'error',\n    'no-console': 'warn'\n  },\n  settings: {\n    react: {\n      version: 'detect'\n    }\n  }\n};","size_bytes":659}},"version":1}